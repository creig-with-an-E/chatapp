{"map":"{\"version\":3,\"sources\":[\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/Message.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/MessageList.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/NewRoomForm.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/RoomList.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/SendMessageForm.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/App.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/serviceWorker.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/index.js\"],\"names\":[\"Message\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"username\",\"text\",\"MessageList\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"messages\",\"messageData\",\"map\",\"message\",\"index\",\"Message_Message\",\"key\",\"Component\",\"NewRoomForm\",\"state\",\"roomName\",\"submitHandle\",\"event\",\"preventDefault\",\"addRoom\",\"setState\",\"changeHandle\",\"input\",\"target\",\"value\",\"bind\",\"assertThisInitialized\",\"onSubmit\",\"onChange\",\"type\",\"placeholder\",\"required\",\"id\",\"RoomList\",\"switchRoom\",\"active\",\"selectedRoom\",\"color\",\"fontSize\",\"style\",\"href\",\"concat\",\"onClick\",\"_this2\",\"styles\",\"headerStyle\",\"roomList\",\"renderElement\",\"SendMessageForm\",\"handleChange\",\"handleSubmit\",\"sendMessage\",\"App\",\"updateMessages\",\"data\",\"msgData\",\"push\",\"console\",\"log\",\"sendMessageHandle\",\"addRoomHandle\",\"switchRoomHandle\",\"socket\",\"openSocket\",\"connect\",\"on\",\"updateRooms\",\"rooms\",\"usernameValue\",\"JSON\",\"stringify\",\"newRoom\",\"emit\",\"msg\",\"toConsumableArray\",\"RoomList_RoomList\",\"MessageList_MessageList\",\"SendMessageForm_SendMessageForm\",\"NewRoomForm_NewRoomForm\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"8OAEMA,EAAS,SAACC,GACR,OACCC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,oBACXJ,EAAMK,UAEVJ,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBACXJ,EAAMM,QCNfC,cACF,SAAAA,EAAYP,GAAM,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMX,KACDe,SAAWP,EAAKR,MAAMgB,YAFXR,wEAKd,OACEP,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBACZO,KAAKI,SAASE,IAAI,SAACC,EAAQC,GAC1B,OACElB,EAAAC,EAAAC,cAACiB,EAAD,CAASC,IAAKF,EACVb,KAAMY,EAAQZ,KACdD,SAAUa,EAAQb,qBAZZiB,EAAAA,WCDpBC,cACH,SAAAA,IAAa,IAAAf,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACXf,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,QAIFa,MAAQ,CACNC,SAAS,IANEjB,EASZkB,aAAa,SAACC,GAEZA,EAAMC,iBACNpB,EAAKR,MAAM6B,QAAQrB,EAAKgB,MAAMC,UAC9BjB,EAAKsB,SAAS,CAACL,SAAS,MAbdjB,EAgBZuB,aAAa,SAACC,GAEZxB,EAAKsB,SAAS,CACZL,SAAUO,EAAMC,OAAOC,SAjB1B1B,EAAKkB,aAAelB,EAAKkB,aAAaS,KAAlB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KACpBA,EAAKuB,aAAevB,EAAKuB,aAAaI,KAAlB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KAHTA,wEAyBR,OACEP,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAA,CAAMkC,SAAU1B,KAAKe,cACnBzB,EAAAC,EAAAC,cAAA,QAAA,CACImC,SAAU3B,KAAKoB,aACfG,MAAOvB,KAAKa,MAAMC,SAClBc,KAAK,OACLC,YAAY,cACZC,UAAQ,IACZxC,EAAAC,EAAAC,cAAA,SAAA,CAAQuC,GAAG,kBAAkBH,KAAK,UAAlC,cAnCYjB,EAAAA,WCApBqB,qLACOlB,GACXd,KAAKX,MAAM4C,WAAWnB,sFAORA,EAAUN,GAAM,IAAAX,EAAAG,KACtBkC,EAASpB,IAAad,KAAKX,MAAM8C,aAAe,CAAEC,MAAO,UAAWC,SAAS,UAAY,GACjG,OACE/C,EAAAC,EAAAC,cAAA,KAAA,CAAIkB,IAAKF,EAAOf,UAAW,SACvBH,EAAAC,EAAAC,cAAA,IAAA,CACE8C,MAAOJ,EACPK,KAAI,IAAAC,OAAM1B,GACV2B,QAAS,WAAA,OAAM5C,EAAKoC,WAAWnB,KAE9B,IALH,IAAA0B,OAMQ1B,sCAML,IAAA4B,EAAA1C,KACT,OACEV,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,KAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,CAAI8C,MAAOK,EAAOC,aAAlB,mBACC5C,KAAKX,MAAMwD,SAASvC,IAAI,SAACQ,EAAUN,GAEpC,OACEkC,EAAKI,cAAchC,EAASN,cAjCbG,EAAAA,WA4CjBgC,EAAS,CACbC,YAAa,CACbP,SAAU,KC9CNU,cACF,SAAAA,EAAY1D,GAAM,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACdlD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMX,KASV2D,aAAa,SAAC3B,GAEZxB,EAAKsB,SAAS,CAACZ,QAAQc,EAAMC,OAAOC,SAZpB1B,EAgBlBoD,aAAa,SAACjC,GACVA,EAAMC,iBACNpB,EAAKR,MAAM6D,YAAYrD,EAAKgB,MAAMN,SAClCV,EAAKsB,SAAS,CAACZ,QAAQ,MAhBvBV,EAAKgB,MAAM,CACPN,QAAS,IAEbV,EAAKmD,aAAenD,EAAKmD,aAAaxB,KAAlB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KACpBA,EAAKoD,aAAepD,EAAKoD,aAAazB,KAAlB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KAPNA,wEAuBd,OACIP,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,oBACViC,SAAU1B,KAAKiD,cAEjB3D,EAAAC,EAAAC,cAAA,QAAA,CACImC,SAAU3B,KAAKgD,aACfzB,MAAOvB,KAAKa,MAAMN,QAClBsB,YAAY,kCACZD,KAAK,iBAhCKjB,EAAAA,4BC2FfwC,cAhFX,SAAAA,EAAY9D,GAAM,IAAAQ,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACdtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,KAAMX,KARVwB,MAAO,CACHT,SAAS,GACTyC,SAAS,GACT/B,SAAU,KACVpB,SAAS,MAGKG,EAgClBuD,eAAe,SAACC,GAEZ,IAAIC,EAAU,IACbA,EAAUzD,EAAKgB,MAAMT,UACbmD,KAAK,CAAC7D,SAAS2D,EAAK3D,SACzBC,KAAK0D,EAAK9C,UAEdV,EAAKsB,SAAS,CAACf,SAASkD,KArCxBE,QAAQC,IAAR,QAAAjB,OAAoB3C,EAAKgB,MAAMnB,WAC/BG,EAAK6D,kBAAoB7D,EAAKqD,YAAY1B,KAAjB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KACzBA,EAAK8D,cAAgB9D,EAAKqB,QAAQM,KAAb1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KACrBA,EAAK+D,iBAAmB/D,EAAKoC,WAAWT,KAAhB1B,OAAA2B,EAAA,EAAA3B,CAAAA,OAAA2B,EAAA,EAAA3B,CAAAD,KALVA,mFAQC,IAAA6C,EAAA1C,KACfwD,QAAQC,IAAR,oBAAAjB,OAAgCxC,KAAKa,MAAMC,WAE3Cd,KAAK6D,OAASC,EAAAA,EAAWC,QAAQ,kBACjC/D,KAAK6D,OAAOG,GAAG,UAAU,WAAA,OAAIR,QAAQC,IAAI,eACzCzD,KAAK6D,OAAOG,GAAG,cAAc,SAACX,GAC1BX,EAAKU,eAAeC,KAExBrD,KAAK6D,OAAOG,GAAG,aAAa,SAACX,GACzBX,EAAKuB,YAAYZ,EAAKa,OACtBxB,EAAKvB,SAAS,CAACL,SAASuC,EAAKa,MAAM,GAAIxE,SAAU2D,EAAKc,gBACtDX,QAAQC,IAAR,mBAAAjB,OAA+B4B,KAAKC,UAAU3B,EAAK7B,MAAMC,cAE7Dd,KAAK6D,OAAOG,GAAG,aAAa,SAACX,GACzBX,EAAKuB,YAAYZ,EAAKa,SAG1BlE,KAAK6D,OAAOG,GAAG,aAAa,SAACX,GACzBG,QAAQC,IAAI,gBAAgBJ,EAAKvC,UACjC4B,EAAKvB,SAAS,CAACL,SAASuC,EAAKvC,gDAe1BwD,GACPd,QAAQC,IAAR,WAAAjB,OAAuB8B,IACxBtE,KAAKmB,SAAS,CAACL,SAASwD,EAASjE,YAAY,KAC7CL,KAAK6D,OAAOU,KAAK,aAAa,CAACzD,SAASwD,wCAG/BJ,GACRlE,KAAKmB,SAAS,CAAC0B,SAASqB,wCAEhBM,GAERxE,KAAK6D,OAAOU,KAAK,cAAc,CAAChE,QAAQiE,oCAGpCF,GAEJ,IAAMJ,EAAKpE,OAAA2E,EAAA,EAAA3E,CAAOE,KAAKa,MAAMgC,UAC7BqB,EAAMX,KAAKe,GACXtE,KAAKmB,SAAS,CACV0B,SAASqB,IAEblE,KAAK6D,OAAOU,KAAK,aAAa,CAACzD,SAASwD,qCAI5C,OACIhF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACkF,EAAD,CAAUzC,WAAYjC,KAAK4D,iBACxBzB,aAAgBnC,KAAKa,MAAMC,SAC3B+B,SAAU7C,KAAKa,MAAMgC,WACxBvD,EAAAC,EAAAC,cAACmF,EAAD,CAAatE,YAAaL,KAAKa,MAAMT,WACrCd,EAAAC,EAAAC,cAACoF,EAAD,CAAiB1B,YAAalD,KAAK0D,oBACnCpE,EAAAC,EAAAC,cAACqF,EAAD,CAAa3D,QAASlB,KAAK2D,wBAlFrBhD,EAAAA,WCOEmE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,EAAAA,EAASC,OAAO9F,EAAAC,EAAAC,cAAC6F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Message =(props)=>{\\n        return (\\n         <div className=\\\"message\\\">\\n           <div className=\\\"message-username\\\">\\n              {props.username}\\n           </div>\\n           <div className=\\\"message-text\\\">\\n              {props.text}\\n           </div>\\n          </div>\\n        );\\n}\\n \\nexport {Message};\",\"import React, { Component } from 'react';\\nimport {Message} from '../components'\\n\\nclass MessageList extends Component {\\n    constructor(props){\\n      super(props)\\n      this.messages = this.props.messageData\\n    }\\n    render() { \\n        return (\\n          <div className=\\\"message-list\\\">\\n            {this.messages.map((message,index)=>{\\n              return (\\n                <Message key={index} \\n                    text={message.text}\\n                    username={message.username}\\n                 />\\n )\\n            })}\\n          </div> );\\n    }\\n}\\n \\nexport { MessageList};\",\"import React, { Component } from 'react';\\n\\nclass NewRoomForm extends Component {\\n   constructor(){\\n     super()\\n     this.submitHandle = this.submitHandle.bind(this);\\n     this.changeHandle = this.changeHandle.bind(this)\\n   } \\n   state = {\\n     roomName:\\\"\\\"\\n   }\\n\\n    submitHandle=(event)=>{\\n      //handles the form submit action\\n      event.preventDefault()\\n      this.props.addRoom(this.state.roomName)\\n      this.setState({roomName:''})\\n    }\\n\\n    changeHandle=(input)=>{\\n      //updates the state when text enter in form\\n      this.setState({\\n        roomName: input.target.value\\n      })\\n      // console.log(this.state.roomName)\\n    }\\n\\n    render() { \\n        return (\\n          <div className=\\\"new-room-form\\\">\\n            <form onSubmit={this.submitHandle}>\\n              <input\\n                  onChange={this.changeHandle}\\n                  value={this.state.roomName}\\n                  type=\\\"text\\\" \\n                  placeholder=\\\"NewRoomForm\\\" \\n                  required />\\n              <button id=\\\"create-room-btn\\\" type=\\\"submit\\\">+</button>\\n            </form>\\n          </div>\\n          );\\n    }\\n}\\n \\nexport {NewRoomForm};\",\"import React, { Component } from \\\"react\\\";\\n\\nclass RoomList extends Component {\\n  switchRoom(roomName) {\\n  this.props.switchRoom(roomName);\\n  }\\n\\n  componentDidMount(){\\n\\n  }\\n\\n  renderElement(roomName, index){\\n    const active = roomName === this.props.selectedRoom ? { color: \\\"#fffffa\\\", fontSize:\\\"1.2rem\\\"} : {}\\n  return(\\n    <li key={index} className={\\\"room \\\"}>\\n        <a\\n          style={active}\\n          href={`#${roomName}`}\\n          onClick={() => this.switchRoom(roomName)}\\n        >\\n          {\\\" \\\"}\\n           {` ${roomName}`}\\n        </a>\\n    </li>\\n  )\\n  }\\n\\n  render() {\\n  return (\\n    <div className=\\\"rooms-list\\\">\\n    <ul>\\n      <h3 style={styles.headerStyle}>Available Rooms</h3>\\n      {this.props.roomList.map((roomName, index) => {\\n      //selected room\\n      return (\\n        this.renderElement(roomName,index)\\n      );\\n      })}\\n    </ul>\\n    </div>\\n  );\\n  }\\n}\\n\\nexport { RoomList };\\n\\nconst styles = {\\n  headerStyle: {\\n  fontSize: 22\\n  }\\n};\\n\",\"import React, { Component } from 'react';\\n\\nclass SendMessageForm extends Component {\\n    constructor(props){\\n        super(props)\\n\\n        this.state={\\n            message: \\\"\\\"\\n        }\\n        this.handleChange = this.handleChange.bind(this)\\n        this.handleSubmit = this.handleSubmit.bind(this)\\n    }\\n\\n    handleChange=(input)=>{\\n      //handles the state for message input field\\n      this.setState({message:input.target.value})\\n\\n    }\\n\\n    handleSubmit=(event)=>{\\n        event.preventDefault()\\n        this.props.sendMessage(this.state.message)\\n        this.setState({message:''})\\n    }\\n\\n    render() {\\n        return (\\n            <form className=\\\"send-message-form\\\"\\n                  onSubmit={this.handleSubmit}\\n            >\\n                <input\\n                    onChange={this.handleChange}\\n                    value={this.state.message}\\n                    placeholder=\\\"Type message here and hit ENTER\\\"\\n                    type=\\\"text\\\" />\\n            </form>\\n        )\\n    }\\n}\\n \\nexport {SendMessageForm};\",\"import React, { Component } from 'react';\\n\\nimport {RoomList,MessageList,NewRoomForm,SendMessageForm} from './components'\\nimport openSocket from 'socket.io-client';\\n\\nclass App extends Component {\\n    state ={\\n        messages:[],\\n        roomList:[],\\n        roomName: null,\\n        username:null\\n\\n    }\\n    constructor(props){\\n        super(props)\\n        console.log(`user ${this.state.username}`)\\n        this.sendMessageHandle = this.sendMessage.bind(this)\\n        this.addRoomHandle = this.addRoom.bind(this)\\n        this.switchRoomHandle = this.switchRoom.bind(this)\\n    }\\n\\n    componentDidMount(){\\n        console.log(`chatting in room ${this.state.roomName}`)\\n        //setting up socket\\n        this.socket = openSocket.connect(\\\"localhost:3000\\\")   //when running locally connect to localhost:3030\\n        this.socket.on(\\\"connect\\\",()=>console.log(\\\"connected\\\"))\\n        this.socket.on(\\\"new_message\\\",(data)=>{\\n            this.updateMessages(data)\\n        })\\n        this.socket.on(\\\"initialize\\\",(data)=>{\\n            this.updateRooms(data.rooms)\\n            this.setState({roomName:data.rooms[0], username: data.usernameValue}) //setting initial room\\n            console.log(`initialize .... ${JSON.stringify(this.state.roomName)}`)\\n        })\\n        this.socket.on(\\\"createRoom\\\",(data)=>{\\n            this.updateRooms(data.rooms)\\n        })\\n\\n        this.socket.on(\\\"switchRoom\\\",(data)=>{\\n            console.log('socket method',data.roomName)\\n            this.setState({roomName:data.roomName})\\n        })\\n\\n    }\\n\\n    updateMessages=(data)=>{\\n        //called when new message received\\n        let msgData = [];\\n         msgData = this.state.messages\\n         msgData.push({username:data.username,\\n            text:data.message\\n        })\\n        this.setState({messages:msgData})\\n    }\\n\\n    switchRoom(newRoom){\\n        console.log(`joining ${newRoom}`)\\n       this.setState({roomName:newRoom, messageData:[]})\\n       this.socket.emit(\\\"switchRoom\\\",{roomName:newRoom})\\n    }\\n\\n    updateRooms(rooms){\\n        this.setState({roomList:rooms})\\n    }\\n    sendMessage(msg){\\n        //handle to send message\\n        this.socket.emit(\\\"new_message\\\",{message:msg})\\n    }\\n\\n    addRoom(newRoom){\\n        //adds room through new room form\\n        const rooms = [...this.state.roomList]\\n        rooms.push(newRoom)\\n        this.setState({\\n            roomList:rooms\\n        })\\n        this.socket.emit(\\\"createRoom\\\",{roomName:newRoom})\\n    }\\n\\n    render() {\\n    return (\\n        <div className=\\\"app\\\">\\n            <RoomList switchRoom={this.switchRoomHandle} \\n               selectedRoom = {this.state.roomName}\\n               roomList={this.state.roomList}/>\\n            <MessageList messageData={this.state.messages}/>\\n            <SendMessageForm sendMessage={this.sendMessageHandle}/>\\n            <NewRoomForm addRoom={this.addRoomHandle}/>\\n        </div>\\n    );\\n}\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{36:function(e,t,a){e.exports=a(70)},67:function(e,t){},70:function(e,t,a){\"use strict\";a.r(t);var n=a(0),o=a.n(n),s=a(33),c=a.n(s),i=a(35),r=a(2),m=a(3),l=a(6),u=a(4),h=a(5),d=a(1),b=function(e){return o.a.createElement(\"div\",{className:\"message\"},o.a.createElement(\"div\",{className:\"message-username\"},e.username),o.a.createElement(\"div\",{className:\"message-text\"},e.text))},g=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).messages=a.props.messageData,a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"message-list\"},this.messages.map(function(e,t){return o.a.createElement(b,{key:t,text:e.text,username:e.username})}))}}]),t}(n.Component),f=function(e){function t(){var e;return Object(r.a)(this,t),(e=Object(l.a)(this,Object(u.a)(t).call(this))).state={roomName:\"\"},e.submitHandle=function(t){t.preventDefault(),e.props.addRoom(e.state.roomName),e.setState({roomName:\"\"})},e.changeHandle=function(t){e.setState({roomName:t.target.value})},e.submitHandle=e.submitHandle.bind(Object(d.a)(Object(d.a)(e))),e.changeHandle=e.changeHandle.bind(Object(d.a)(Object(d.a)(e))),e}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"new-room-form\"},o.a.createElement(\"form\",{onSubmit:this.submitHandle},o.a.createElement(\"input\",{onChange:this.changeHandle,value:this.state.roomName,type:\"text\",placeholder:\"NewRoomForm\",required:!0}),o.a.createElement(\"button\",{id:\"create-room-btn\",type:\"submit\"},\"+\")))}}]),t}(n.Component),p=function(e){function t(){return Object(r.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"switchRoom\",value:function(e){this.props.switchRoom(e)}},{key:\"componentDidMount\",value:function(){}},{key:\"renderElement\",value:function(e,t){var a=this,n=e===this.props.selectedRoom?{color:\"#fffffa\",fontSize:\"1.2rem\"}:{};return o.a.createElement(\"li\",{key:t,className:\"room \"},o.a.createElement(\"a\",{style:n,href:\"#\".concat(e),onClick:function(){return a.switchRoom(e)}},\" \",\" \".concat(e)))}},{key:\"render\",value:function(){var e=this;return o.a.createElement(\"div\",{className:\"rooms-list\"},o.a.createElement(\"ul\",null,o.a.createElement(\"h3\",{style:j.headerStyle},\"Available Rooms\"),this.props.roomList.map(function(t,a){return e.renderElement(t,a)})))}}]),t}(n.Component),j={headerStyle:{fontSize:22}},v=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleChange=function(e){a.setState({message:e.target.value})},a.handleSubmit=function(e){e.preventDefault(),a.props.sendMessage(a.state.message),a.setState({message:\"\"})},a.state={message:\"\"},a.handleChange=a.handleChange.bind(Object(d.a)(Object(d.a)(a))),a.handleSubmit=a.handleSubmit.bind(Object(d.a)(Object(d.a)(a))),a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return o.a.createElement(\"form\",{className:\"send-message-form\",onSubmit:this.handleSubmit},o.a.createElement(\"input\",{onChange:this.handleChange,value:this.state.message,placeholder:\"Type message here and hit ENTER\",type:\"text\"}))}}]),t}(n.Component),O=a(34),k=a.n(O),N=function(e){function t(e){var a;return Object(r.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).state={messages:[],roomList:[],roomName:null,username:null},a.updateMessages=function(e){var t=[];(t=a.state.messages).push({username:e.username,text:e.message}),a.setState({messages:t})},console.log(\"user \".concat(a.state.username)),a.sendMessageHandle=a.sendMessage.bind(Object(d.a)(Object(d.a)(a))),a.addRoomHandle=a.addRoom.bind(Object(d.a)(Object(d.a)(a))),a.switchRoomHandle=a.switchRoom.bind(Object(d.a)(Object(d.a)(a))),a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;console.log(\"chatting in room \".concat(this.state.roomName)),this.socket=k.a.connect(\"localhost:3000\"),this.socket.on(\"connect\",function(){return console.log(\"connected\")}),this.socket.on(\"new_message\",function(t){e.updateMessages(t)}),this.socket.on(\"initialize\",function(t){e.updateRooms(t.rooms),e.setState({roomName:t.rooms[0],username:t.usernameValue}),console.log(\"initialize .... \".concat(JSON.stringify(e.state.roomName)))}),this.socket.on(\"createRoom\",function(t){e.updateRooms(t.rooms)}),this.socket.on(\"switchRoom\",function(t){console.log(\"socket method\",t.roomName),e.setState({roomName:t.roomName})})}},{key:\"switchRoom\",value:function(e){console.log(\"joining \".concat(e)),this.setState({roomName:e,messageData:[]}),this.socket.emit(\"switchRoom\",{roomName:e})}},{key:\"updateRooms\",value:function(e){this.setState({roomList:e})}},{key:\"sendMessage\",value:function(e){this.socket.emit(\"new_message\",{message:e})}},{key:\"addRoom\",value:function(e){var t=Object(i.a)(this.state.roomList);t.push(e),this.setState({roomList:t}),this.socket.emit(\"createRoom\",{roomName:e})}},{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"app\"},o.a.createElement(p,{switchRoom:this.switchRoomHandle,selectedRoom:this.state.roomName,roomList:this.state.roomList}),o.a.createElement(g,{messageData:this.state.messages}),o.a.createElement(v,{sendMessage:this.sendMessageHandle}),o.a.createElement(f,{addRoom:this.addRoomHandle}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(N,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[36,1,2]]]);","extractedComments":[]}