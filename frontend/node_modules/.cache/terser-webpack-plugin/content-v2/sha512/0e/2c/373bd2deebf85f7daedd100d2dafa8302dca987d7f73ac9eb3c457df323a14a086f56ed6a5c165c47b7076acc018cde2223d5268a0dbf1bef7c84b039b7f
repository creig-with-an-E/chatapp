{"map":"{\"version\":3,\"sources\":[\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/Message.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/MessageList.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/NewRoomForm.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/RoomList.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/components/SendMessageForm.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/App.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/serviceWorker.js\",\"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/index.js\"],\"names\":[\"Message\",\"props\",\"currentUser\",\"username\",\"react_default\",\"a\",\"createElement\",\"className\",\"style\",\"paddingLeft\",\"backgroundColor\",\"text\",\"MessageList\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"console\",\"log\",\"_this2\",\"messageData\",\"map\",\"message\",\"index\",\"Message_Message\",\"key\",\"chat\",\"name\",\"Component\",\"NewRoomForm\",\"state\",\"roomName\",\"submitHandle\",\"event\",\"preventDefault\",\"addRoom\",\"setState\",\"changeHandle\",\"input\",\"target\",\"value\",\"bind\",\"assertThisInitialized\",\"onSubmit\",\"onChange\",\"type\",\"placeholder\",\"required\",\"id\",\"RoomList\",\"switchRoom\",\"active\",\"selectedRoom\",\"color\",\"fontSize\",\"href\",\"concat\",\"onClick\",\"styles\",\"headerStyle\",\"roomList\",\"renderElement\",\"SendMessageForm\",\"handleChange\",\"handleSubmit\",\"sendMessage\",\"App\",\"updateMessages\",\"data\",\"msgData\",\"messages\",\"push\",\"environmentPort\",\"sendMessageHandle\",\"addRoomHandle\",\"switchRoomHandle\",\"socket\",\"openSocket\",\"connect\",\"on\",\"updateRooms\",\"rooms\",\"newRoom\",\"emit\",\"msg\",\"toConsumableArray\",\"RoomList_RoomList\",\"MessageList_MessageList\",\"SendMessageForm_SendMessageForm\",\"NewRoomForm_NewRoomForm\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Message =(props)=>{\\n      const currentUser = props.currentUser === props.username ? \\\"Me\\\" : null;\\n         return (\\n            <div className=\\\"message\\\" style={currentUser ? {paddingLeft: 25}: {}}>\\n              <div className=\\\"message-username\\\">\\n                 {currentUser || props.username}\\n              </div>\\n              <div className=\\\"message-text\\\" style={currentUser ? {backgroundColor:\\\"#7280ad\\\"}: {}}>\\n                 {props.text}\\n              </div>\\n             </div>\\n           )\\n       \\n}\\n \\nexport {Message};\",\"import React, { Component } from \\\"react\\\";\\nimport { Message } from \\\"../components\\\";\\n\\nclass MessageList extends Component {\\n  constructor(props) {\\n    super(props);\\n    console.log(\\\"message List\\\");\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"message-list\\\">\\n        {this.props.messageData.map((message, index) => {\\n          return (\\n            <Message\\n              key={index}\\n              text={message.chat}\\n              username={message.name}\\n              currentUser={this.props.currentUser}\\n            />\\n          );\\n        })}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport { MessageList };\\n\",\"import React, { Component } from 'react';\\n\\nclass NewRoomForm extends Component {\\n   constructor(){\\n     super()\\n     this.submitHandle = this.submitHandle.bind(this);\\n     this.changeHandle = this.changeHandle.bind(this)\\n   } \\n   state = {\\n     roomName:\\\"\\\"\\n   }\\n\\n    submitHandle=(event)=>{\\n      //handles the form submit action\\n      event.preventDefault()\\n      this.props.addRoom(this.state.roomName)\\n      this.setState({roomName:''})\\n    }\\n\\n    changeHandle=(input)=>{\\n      //updates the state when text enter in form\\n      this.setState({\\n        roomName: input.target.value\\n      })\\n      // console.log(this.state.roomName)\\n    }\\n\\n    render() { \\n        return (\\n          <div className=\\\"new-room-form\\\">\\n            <form onSubmit={this.submitHandle}>\\n              <input\\n                  onChange={this.changeHandle}\\n                  value={this.state.roomName}\\n                  type=\\\"text\\\" \\n                  placeholder=\\\"NewRoomForm\\\" \\n                  required />\\n              <button id=\\\"create-room-btn\\\" type=\\\"submit\\\">+</button>\\n            </form>\\n          </div>\\n          );\\n    }\\n}\\n \\nexport {NewRoomForm};\",\"import React, { Component } from \\\"react\\\";\\n\\nclass RoomList extends Component {\\n  switchRoom(roomName) {\\n  this.props.switchRoom(roomName);\\n  }\\n\\n  componentDidMount(){\\n\\n  }\\n\\n  renderElement(roomName, index){\\n    const active = roomName === this.props.selectedRoom ? { color: \\\"#FFA011\\\", fontSize:\\\"1.2rem\\\"} : {}\\n  return(\\n    <li key={index} className={\\\"room \\\"}>\\n        <a\\n          style={active}\\n          href={`#${roomName}`}\\n          onClick={() => this.switchRoom(roomName)}\\n        >\\n          {\\\" \\\"}\\n           {` ${roomName}`}\\n        </a>\\n    </li>\\n  )\\n  }\\n\\n  render() {\\n  return (\\n    <div className=\\\"rooms-list\\\">\\n    <ul>\\n      <h3 style={styles.headerStyle}>Available Rooms</h3>\\n      {this.props.roomList.map((roomName, index) => {\\n      //selected room\\n      return (\\n        this.renderElement(roomName,index)\\n      );\\n      })}\\n    </ul>\\n    </div>\\n  );\\n  }\\n}\\n\\nexport { RoomList };\\n\\nconst styles = {\\n  headerStyle: {\\n  fontSize: 22,\\n  color:\\\"#cfddf4\\\"\\n  }\\n};\\n\",\"import React, { Component } from 'react';\\n\\nclass SendMessageForm extends Component {\\n    constructor(props){\\n        super(props)\\n\\n        this.state={\\n            message: \\\"\\\"\\n        }\\n        this.handleChange = this.handleChange.bind(this)\\n        this.handleSubmit = this.handleSubmit.bind(this)\\n    }\\n\\n    handleChange=(input)=>{\\n      //handles the state for message input field\\n      this.setState({message:input.target.value})\\n\\n    }\\n\\n    handleSubmit=(event)=>{\\n        event.preventDefault()\\n        this.props.sendMessage(this.state.message)\\n        this.setState({message:''})\\n    }\\n\\n    render() {\\n        return (\\n            <form className=\\\"send-message-form\\\"\\n                  onSubmit={this.handleSubmit}\\n            >\\n                <input\\n                    onChange={this.handleChange}\\n                    value={this.state.message}\\n                    placeholder=\\\"Type message here and hit ENTER\\\"\\n                    type=\\\"text\\\" />\\n            </form>\\n        )\\n    }\\n}\\n \\nexport {SendMessageForm};\",\"import React, { Component } from \\\"react\\\";\\n\\nimport {\\n  RoomList,\\n  MessageList,\\n  NewRoomForm,\\n  SendMessageForm\\n} from \\\"./components\\\";\\nimport openSocket from \\\"socket.io-client\\\";\\n\\nclass App extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      messages: [],\\n      roomList: [],\\n      roomName: null,\\n      username: null\\n    };\\n    this.environmentPort =\\n      process.env.NODE_ENV !== \\\"production\\\" ? \\\"localhost:3030\\\" : \\\"/\\\"; //used to set port either to 3030 or /\\n    this.sendMessageHandle = this.sendMessage.bind(this);\\n    this.addRoomHandle = this.addRoom.bind(this);\\n    this.switchRoomHandle = this.switchRoom.bind(this);\\n  }\\n\\n  componentDidMount() {\\n    //setting up socket\\n    this.socket = openSocket.connect(this.environmentPort); //when running locally connect to localhost:3030\\n    this.socket.on(\\\"connect\\\", () => console.log(\\\"connected\\\"));\\n    this.socket.on(\\\"new_message\\\", data => {\\n      this.updateMessages(data);\\n    });\\n    this.socket.on(\\\"initialize\\\", data => {\\n      this.updateRooms(data.rooms);\\n      this.setState({ \\n        roomName: data.rooms[0],\\n        username: data.username,\\n        messages: data.messages\\n       }); //setting initial room\\n    });\\n    this.socket.on(\\\"createRoom\\\", data => {\\n      this.updateRooms(data.rooms);\\n    });\\n\\n    this.socket.on(\\\"switchRoom\\\", data => {\\n      console.log(\\\"socket method\\\", data.roomName);\\n      this.setState({ roomName: data.roomName });\\n    });\\n  }\\n\\n  updateMessages = data => {\\n    //called when new message received\\n    let msgData = [];\\n    msgData = this.state.messages;\\n    msgData.push({ username: data.username, text: data.message });\\n    this.setState({ messages: msgData });\\n  };\\n\\n  switchRoom(newRoom) {\\n    console.log(`joining ${newRoom}`);\\n    this.setState({ roomName: newRoom, messageData: [] });\\n    this.socket.emit(\\\"switchRoom\\\", { roomName: newRoom });\\n  }\\n\\n  updateRooms(rooms) {\\n    this.setState({ roomList: rooms });\\n  }\\n  sendMessage(msg) {\\n    //handle to send message\\n    this.socket.emit(\\\"new_message\\\", { message: msg });\\n  }\\n\\n  addRoom(newRoom) {\\n    //adds room through new room form\\n    const rooms = [...this.state.roomList];\\n    rooms.push(newRoom);\\n    this.setState({\\n      roomList: rooms\\n    });\\n    this.socket.emit(\\\"createRoom\\\", { roomName: newRoom });\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"app\\\">\\n        <RoomList\\n          switchRoom={this.switchRoomHandle}\\n          selectedRoom={this.state.roomName}\\n          roomList={this.state.roomList}\\n        />\\n        <MessageList\\n          messageData={this.state.messages}\\n          currentUser={this.state.username}\\n        />\\n        <SendMessageForm sendMessage={this.sendMessageHandle} />\\n        <NewRoomForm addRoom={this.addRoomHandle} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{36:function(e,t,a){e.exports=a(70)},67:function(e,t){},70:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),o=a(33),r=a.n(o),c=a(35),i=a(2),m=a(3),l=a(6),u=a(4),h=a(5),d=a(1),b=function(e){var t=e.currentUser===e.username?\"Me\":null;return s.a.createElement(\"div\",{className:\"message\",style:t?{paddingLeft:25}:{}},s.a.createElement(\"div\",{className:\"message-username\"},t||e.username),s.a.createElement(\"div\",{className:\"message-text\",style:t?{backgroundColor:\"#7280ad\"}:{}},e.text))},g=function(e){function t(e){var a;return Object(i.a)(this,t),a=Object(l.a)(this,Object(u.a)(t).call(this,e)),console.log(\"message List\"),a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"message-list\"},this.props.messageData.map(function(t,a){return s.a.createElement(b,{key:a,text:t.chat,username:t.name,currentUser:e.props.currentUser})}))}}]),t}(n.Component),f=function(e){function t(){var e;return Object(i.a)(this,t),(e=Object(l.a)(this,Object(u.a)(t).call(this))).state={roomName:\"\"},e.submitHandle=function(t){t.preventDefault(),e.props.addRoom(e.state.roomName),e.setState({roomName:\"\"})},e.changeHandle=function(t){e.setState({roomName:t.target.value})},e.submitHandle=e.submitHandle.bind(Object(d.a)(Object(d.a)(e))),e.changeHandle=e.changeHandle.bind(Object(d.a)(Object(d.a)(e))),e}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"new-room-form\"},s.a.createElement(\"form\",{onSubmit:this.submitHandle},s.a.createElement(\"input\",{onChange:this.changeHandle,value:this.state.roomName,type:\"text\",placeholder:\"NewRoomForm\",required:!0}),s.a.createElement(\"button\",{id:\"create-room-btn\",type:\"submit\"},\"+\")))}}]),t}(n.Component),p=function(e){function t(){return Object(i.a)(this,t),Object(l.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"switchRoom\",value:function(e){this.props.switchRoom(e)}},{key:\"componentDidMount\",value:function(){}},{key:\"renderElement\",value:function(e,t){var a=this,n=e===this.props.selectedRoom?{color:\"#FFA011\",fontSize:\"1.2rem\"}:{};return s.a.createElement(\"li\",{key:t,className:\"room \"},s.a.createElement(\"a\",{style:n,href:\"#\".concat(e),onClick:function(){return a.switchRoom(e)}},\" \",\" \".concat(e)))}},{key:\"render\",value:function(){var e=this;return s.a.createElement(\"div\",{className:\"rooms-list\"},s.a.createElement(\"ul\",null,s.a.createElement(\"h3\",{style:v.headerStyle},\"Available Rooms\"),this.props.roomList.map(function(t,a){return e.renderElement(t,a)})))}}]),t}(n.Component),v={headerStyle:{fontSize:22,color:\"#cfddf4\"}},j=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).handleChange=function(e){a.setState({message:e.target.value})},a.handleSubmit=function(e){e.preventDefault(),a.props.sendMessage(a.state.message),a.setState({message:\"\"})},a.state={message:\"\"},a.handleChange=a.handleChange.bind(Object(d.a)(Object(d.a)(a))),a.handleSubmit=a.handleSubmit.bind(Object(d.a)(Object(d.a)(a))),a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"form\",{className:\"send-message-form\",onSubmit:this.handleSubmit},s.a.createElement(\"input\",{onChange:this.handleChange,value:this.state.message,placeholder:\"Type message here and hit ENTER\",type:\"text\"}))}}]),t}(n.Component),O=a(34),k=a.n(O),y=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(l.a)(this,Object(u.a)(t).call(this,e))).updateMessages=function(e){var t=[];(t=a.state.messages).push({username:e.username,text:e.message}),a.setState({messages:t})},a.state={messages:[],roomList:[],roomName:null,username:null},a.environmentPort=\"/\",a.sendMessageHandle=a.sendMessage.bind(Object(d.a)(Object(d.a)(a))),a.addRoomHandle=a.addRoom.bind(Object(d.a)(Object(d.a)(a))),a.switchRoomHandle=a.switchRoom.bind(Object(d.a)(Object(d.a)(a))),a}return Object(h.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.socket=k.a.connect(this.environmentPort),this.socket.on(\"connect\",function(){return console.log(\"connected\")}),this.socket.on(\"new_message\",function(t){e.updateMessages(t)}),this.socket.on(\"initialize\",function(t){e.updateRooms(t.rooms),e.setState({roomName:t.rooms[0],username:t.username,messages:t.messages})}),this.socket.on(\"createRoom\",function(t){e.updateRooms(t.rooms)}),this.socket.on(\"switchRoom\",function(t){console.log(\"socket method\",t.roomName),e.setState({roomName:t.roomName})})}},{key:\"switchRoom\",value:function(e){console.log(\"joining \".concat(e)),this.setState({roomName:e,messageData:[]}),this.socket.emit(\"switchRoom\",{roomName:e})}},{key:\"updateRooms\",value:function(e){this.setState({roomList:e})}},{key:\"sendMessage\",value:function(e){this.socket.emit(\"new_message\",{message:e})}},{key:\"addRoom\",value:function(e){var t=Object(c.a)(this.state.roomList);t.push(e),this.setState({roomList:t}),this.socket.emit(\"createRoom\",{roomName:e})}},{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"app\"},s.a.createElement(p,{switchRoom:this.switchRoomHandle,selectedRoom:this.state.roomName,roomList:this.state.roomList}),s.a.createElement(g,{messageData:this.state.messages,currentUser:this.state.username}),s.a.createElement(j,{sendMessage:this.sendMessageHandle}),s.a.createElement(f,{addRoom:this.addRoomHandle}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(s.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[36,1,2]]]);","extractedComments":[]}