{"ast":null,"code":"import _toConsumableArray from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { RoomList, MessageList, NewRoomForm, SendMessageForm } from './components';\nimport openSocket from 'socket.io-client';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: [],\n      roomList: []\n    };\n\n    _this.updateMessages = function (data) {\n      //called when new message received\n      var msgData = [];\n      msgData = _this.state.messages;\n      msgData.push({\n        username: data.username,\n        text: data.message\n      });\n\n      _this.setState({\n        messages: msgData\n      });\n    };\n\n    _this.sendMessageHandle = _this.sendMessage.bind(_assertThisInitialized(_this));\n    _this.addRoomHandle = _this.addRoom.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //setting up socket\n      this.socket = openSocket.connect(\"localhost:3030\");\n      this.socket.on(\"connect\", function () {\n        return console.log(\"connected\");\n      });\n      this.socket.on(\"new_message\", function (data) {\n        _this2.updateMessages(data);\n      });\n      this.socket.on(\"initialize\", function (data) {\n        // this.addRoom(data.rooms)\n        console.log(\"initialize .... \".concat(JSON.stringify(data.rooms)));\n      });\n      this.socket.on(\"createRoom\", function (data) {\n        _this2.updateRooms(data.rooms);\n      });\n    }\n  }, {\n    key: \"updateRooms\",\n    value: function updateRooms(rooms) {\n      this.setState({\n        roomList: rooms\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(msg) {\n      //handle to send message\n      this.socket.emit(\"new_message\", {\n        message: msg\n      });\n    }\n  }, {\n    key: \"addRoom\",\n    value: function addRoom(newRoom) {\n      //adds room through new room form\n      var rooms = _toConsumableArray(this.state.roomList);\n\n      rooms.push(newRoom);\n      this.setState({\n        roomList: rooms\n      });\n      this.socket.emit(\"createRoom\", {\n        roomName: newRoom\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(RoomList, {\n        roomList: this.state.roomList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        messageData: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        sendMessage: this.sendMessageHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        addRoom: this.addRoomHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/georgebrown/winter2019/fullstack/labs/comp-3133-labs-creigPhiri/frontend/src/App.js"],"names":["React","Component","RoomList","MessageList","NewRoomForm","SendMessageForm","openSocket","App","props","state","messages","roomList","updateMessages","data","msgData","push","username","text","message","setState","sendMessageHandle","sendMessage","bind","addRoomHandle","addRoom","socket","connect","on","console","log","JSON","stringify","rooms","updateRooms","msg","emit","newRoom","roomName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {RoomList,MessageList,NewRoomForm,SendMessageForm} from './components'\nimport openSocket from 'socket.io-client';\n\nclass App extends Component {\n    state ={\n        messages:[],\n        roomList:[]\n    }\n    constructor(props){\n        super(props)\n        this.sendMessageHandle = this.sendMessage.bind(this)\n        this.addRoomHandle = this.addRoom.bind(this)\n    }\n\n    componentDidMount(){\n        //setting up socket\n        this.socket = openSocket.connect(\"localhost:3030\")\n        this.socket.on(\"connect\",()=>console.log(\"connected\"))\n        this.socket.on(\"new_message\",(data)=>{\n            this.updateMessages(data)\n        })\n        this.socket.on(\"initialize\",(data)=>{\n            // this.addRoom(data.rooms)\n            console.log(`initialize .... ${JSON.stringify(data.rooms)}`)\n        })\n        this.socket.on(\"createRoom\",(data)=>{\n            this.updateRooms(data.rooms)\n        })\n    }\n\n    updateMessages=(data)=>{\n        //called when new message received\n        let msgData = [];\n         msgData = this.state.messages\n         msgData.push({username:data.username,\n            text:data.message\n        })\n        this.setState({messages:msgData})\n    }\n\n    updateRooms(rooms){\n        this.setState({roomList:rooms})\n    }\n    sendMessage(msg){\n        //handle to send message\n        this.socket.emit(\"new_message\",{message:msg})\n    }\n\n    addRoom(newRoom){\n        //adds room through new room form\n        const rooms = [...this.state.roomList]\n        rooms.push(newRoom)\n        this.setState({\n            roomList:rooms\n        })\n        this.socket.emit(\"createRoom\",{roomName:newRoom})\n    }\n\n    render() {\n    return (\n        <div className=\"app\">\n            <RoomList roomList={this.state.roomList}/>\n            <MessageList messageData={this.state.messages}/>\n            <SendMessageForm sendMessage={this.sendMessageHandle}/>\n            <NewRoomForm addRoom={this.addRoomHandle}/>\n        </div>\n    );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}