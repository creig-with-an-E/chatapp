{"ast":null,"code":"import _toConsumableArray from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { RoomList, MessageList, NewRoomForm, SendMessageForm } from './components';\nimport openSocket from 'socket.io-client';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null\n    };\n\n    _this.updateMessages = function (data) {\n      //called when new message received\n      var msgData = [];\n      msgData = _this.state.messages;\n      msgData.push({\n        username: data.username,\n        text: data.message\n      });\n\n      _this.setState({\n        messages: msgData\n      });\n    };\n\n    console.log(\"user \".concat(_this.socket.user));\n    _this.sendMessageHandle = _this.sendMessage.bind(_assertThisInitialized(_this));\n    _this.addRoomHandle = _this.addRoom.bind(_assertThisInitialized(_this));\n    _this.switchRoomHandle = _this.switchRoom.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"chatting in room \".concat(this.state.roomName)); //setting up socket\n\n      this.socket = openSocket.connect(\"localhost:3000\"); //when running locally connect to localhost:3030\n\n      this.socket.on(\"connect\", function () {\n        return console.log(\"connected\");\n      });\n      this.socket.on(\"new_message\", function (data) {\n        _this2.updateMessages(data);\n      });\n      this.socket.on(\"initialize\", function (data) {\n        _this2.updateRooms(data.rooms);\n\n        _this2.setState({\n          roomName: data.rooms[0],\n          username: data.usernameValue\n        }); //setting initial room\n\n\n        console.log(\"initialize .... \".concat(JSON.stringify(_this2.state.roomName)));\n      });\n      this.socket.on(\"createRoom\", function (data) {\n        _this2.updateRooms(data.rooms);\n      });\n      this.socket.on(\"switchRoom\", function (data) {\n        console.log('socket method', data.roomName);\n\n        _this2.setState({\n          roomName: data.roomName\n        });\n      });\n    }\n  }, {\n    key: \"switchRoom\",\n    value: function switchRoom(newRoom) {\n      console.log(\"joining \".concat(newRoom));\n      this.setState({\n        roomName: newRoom,\n        messageData: []\n      });\n      this.socket.emit(\"switchRoom\", {\n        roomName: newRoom\n      });\n    }\n  }, {\n    key: \"updateRooms\",\n    value: function updateRooms(rooms) {\n      this.setState({\n        roomList: rooms\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(msg) {\n      //handle to send message\n      this.socket.emit(\"new_message\", {\n        message: msg\n      });\n    }\n  }, {\n    key: \"addRoom\",\n    value: function addRoom(newRoom) {\n      //adds room through new room form\n      var rooms = _toConsumableArray(this.state.roomList);\n\n      rooms.push(newRoom);\n      this.setState({\n        roomList: rooms\n      });\n      this.socket.emit(\"createRoom\", {\n        roomName: newRoom\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(RoomList, {\n        switchRoom: this.switchRoomHandle,\n        selectedRoom: this.state.roomName,\n        roomList: this.state.roomList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        messageData: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        sendMessage: this.sendMessageHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        addRoom: this.addRoomHandle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/fortunephiri/Documents/Projects/chatapp/frontend/src/App.js"],"names":["React","Component","RoomList","MessageList","NewRoomForm","SendMessageForm","openSocket","App","props","state","messages","roomList","roomName","username","updateMessages","data","msgData","push","text","message","setState","console","log","socket","user","sendMessageHandle","sendMessage","bind","addRoomHandle","addRoom","switchRoomHandle","switchRoom","connect","on","updateRooms","rooms","usernameValue","JSON","stringify","newRoom","messageData","emit","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {RoomList,MessageList,NewRoomForm,SendMessageForm} from './components'\nimport openSocket from 'socket.io-client';\n\nclass App extends Component {\n    state ={\n        messages:[],\n        roomList:[],\n        roomName: null,\n        username:null\n\n    }\n    constructor(props){\n        super(props)\n        console.log(`user ${this.socket.user}`)\n        this.sendMessageHandle = this.sendMessage.bind(this)\n        this.addRoomHandle = this.addRoom.bind(this)\n        this.switchRoomHandle = this.switchRoom.bind(this)\n    }\n\n    componentDidMount(){\n        console.log(`chatting in room ${this.state.roomName}`)\n        //setting up socket\n        this.socket = openSocket.connect(\"localhost:3000\")   //when running locally connect to localhost:3030\n        this.socket.on(\"connect\",()=>console.log(\"connected\"))\n        this.socket.on(\"new_message\",(data)=>{\n            this.updateMessages(data)\n        })\n        this.socket.on(\"initialize\",(data)=>{\n            this.updateRooms(data.rooms)\n            this.setState({roomName:data.rooms[0], username: data.usernameValue}) //setting initial room\n            console.log(`initialize .... ${JSON.stringify(this.state.roomName)}`)\n        })\n        this.socket.on(\"createRoom\",(data)=>{\n            this.updateRooms(data.rooms)\n        })\n\n        this.socket.on(\"switchRoom\",(data)=>{\n            console.log('socket method',data.roomName)\n            this.setState({roomName:data.roomName})\n        })\n\n    }\n\n    updateMessages=(data)=>{\n        //called when new message received\n        let msgData = [];\n         msgData = this.state.messages\n         msgData.push({username:data.username,\n            text:data.message\n        })\n        this.setState({messages:msgData})\n    }\n\n    switchRoom(newRoom){\n        console.log(`joining ${newRoom}`)\n       this.setState({roomName:newRoom, messageData:[]})\n       this.socket.emit(\"switchRoom\",{roomName:newRoom})\n    }\n\n    updateRooms(rooms){\n        this.setState({roomList:rooms})\n    }\n    sendMessage(msg){\n        //handle to send message\n        this.socket.emit(\"new_message\",{message:msg})\n    }\n\n    addRoom(newRoom){\n        //adds room through new room form\n        const rooms = [...this.state.roomList]\n        rooms.push(newRoom)\n        this.setState({\n            roomList:rooms\n        })\n        this.socket.emit(\"createRoom\",{roomName:newRoom})\n    }\n\n    render() {\n    return (\n        <div className=\"app\">\n            <RoomList switchRoom={this.switchRoomHandle} \n               selectedRoom = {this.state.roomName}\n               roomList={this.state.roomList}/>\n            <MessageList messageData={this.state.messages}/>\n            <SendMessageForm sendMessage={this.sendMessageHandle}/>\n            <NewRoomForm addRoom={this.addRoomHandle}/>\n        </div>\n    );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}