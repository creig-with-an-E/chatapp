{"version":3,"sources":["components/Message.js","components/MessageList.js","components/NewRoomForm.js","components/RoomList.js","components/SendMessageForm.js","components/spinner.js","components/login.js","navigation/navigationItems/navigationItem/index.js","navigation/navigationItems/index.js","navigation/SideDrawer/toggleButton/index.js","navigation/toolbar/index.js","Backdrop/index.js","navigation/SideDrawer/index.js","App.js","serviceWorker.js","index.js","navigation/toolbar/Toolbar.module.css","navigation/navigationItems/NavigationItems.module.css","navigation/navigationItems/navigationItem/NavigationItem.module.css","navigation/SideDrawer/toggleButton/ToggleButton.module.css","Backdrop/Backdrop.module.css","assets/imgs/spinner.gif","navigation/SideDrawer/SideDrawer.module.css"],"names":["Message","props","currentUser","username","react_default","a","createElement","className","style","marginLeft","background","borderRight","text","MessageList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","_this2","messageData","map","message","index","Message_Message","key","chat","name","Component","NewRoomForm","state","roomName","submitHandle","event","preventDefault","addRoom","setState","changeHandle","input","target","value","bind","assertThisInitialized","onSubmit","onChange","type","placeholder","required","id","RoomList","switchRoom","active","selectedRoom","color","fontWeight","href","concat","onClick","roomList","renderElement","SendMessageForm","handleChange","handleSubmit","sendMessage","spinnerImage","require","Spinner","display","width","justifyContent","src","alt","Login","password","defineProperty","_this$state","login","button","loading","spinner_Spinner","method","onChangeHandle","error","navigationItem","classes","NavigationItem","children","navigationItems","authenticatedRoutes","Fragment","navigationItems_navigationItem","link","logout","NavigationItems","toggleButton","click","DrawerToggle","toolbar","Toolbar","SideDrawer_toggleButton","drawerToggleClicked","Logo","DesktopOnly","navigation_navigationItems","isAuthenticated","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","visible","Open","toggleSideDrawer","join","App","updateMessages","data","msgData","messages","push","showSideBar","sideDrawerToggleHandler","prevState","environmentPort","sendMessageHandle","addRoomHandle","switchRoomHandle","socket","openSocket","connect","on","rooms","currentRoom","updateRooms","emit","newRoom","msg","toConsumableArray","_this3","_ref","axios","post","then","response","status","catch","navigation_toolbar","RoomList_RoomList","NewRoomForm_NewRoomForm","MessageList_MessageList","SendMessageForm_SendMessageForm","login_Login","userLogin","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.55ad807c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Message = props => {\n  const currentUser = props.currentUser === props.username ? \"Me\" : null;\n  return (\n    <div className=\"message\" style={currentUser?{marginLeft:\"70px\"}:{}}>\n      <div className=\"message-username\"\n        style={currentUser ? { background:\"#ccc\", borderRight:\"2px solid #FFC42D\"}:{}}\n        >\n        {currentUser || props.username}</div>\n      <div\n        className=\"message-text\">\n        {props.text}\n      </div>\n    </div>\n  );\n};\n\nexport { Message };\n","import React, { Component } from \"react\";\nimport { Message } from \"../components\";\n\nclass MessageList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"message List\");\n  }\n\n  render() {\n    return (\n      <div className=\"message-list\">\n        {this.props.messageData.map((message, index) => {\n          return (\n            <Message\n              key={index}\n              text={message.chat}\n              username={message.name}\n              currentUser={this.props.currentUser}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport { MessageList };\n","import React, { Component } from 'react';\n\nclass NewRoomForm extends Component {\n   constructor(){\n     super()\n     this.submitHandle = this.submitHandle.bind(this);\n     this.changeHandle = this.changeHandle.bind(this)\n   } \n   state = {\n     roomName:\"\"\n   }\n\n    submitHandle=(event)=>{\n      //handles the form submit action\n      event.preventDefault()\n      this.props.addRoom(this.state.roomName)\n      this.setState({roomName:''})\n    }\n\n    changeHandle=(input)=>{\n      //updates the state when text enter in form\n      this.setState({\n        roomName: input.target.value\n      })\n      // console.log(this.state.roomName)\n    }\n\n    render() { \n        return (\n          <div className=\"new-room-form\">\n            <form onSubmit={this.submitHandle}>\n              <input\n                  onChange={this.changeHandle}\n                  value={this.state.roomName}\n                  type=\"text\" \n                  placeholder=\"Create room\" \n                  required />\n              <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n          </div>\n          );\n    }\n}\n \nexport {NewRoomForm};","import React, { Component } from \"react\";\n\nclass RoomList extends Component {\n  switchRoom(roomName) {\n  this.props.switchRoom(roomName);\n  }\n\n  componentDidMount(){\n\n  }\n\n  renderElement(roomName, index){\n    const active = roomName === this.props.selectedRoom ? {color:\"#FFC42D\", fontWeight: 'bold',} : {}\n  return(\n    <li key={index} className={\"room\"}>\n        <a\n          style={active}\n          href={`#${roomName}`}\n          onClick={() => this.switchRoom(roomName)}\n        >\n          {\" \"}\n           {` ${roomName}`}\n        </a>\n    </li>\n  )\n  }\n\n  render() {\n  return (\n    <div className=\"rooms-list\">\n    <h3>Available Rooms</h3>\n    <ul>\n      {this.props.roomList.map((roomName, index) => {\n      //selected room\n      return (\n        this.renderElement(roomName,index)\n      );\n      })}\n    </ul>\n    </div>\n  );\n  }\n}\n\nexport { RoomList };\n","import React, { Component } from 'react';\n\nclass SendMessageForm extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            message: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange=(input)=>{\n      //handles the state for message input field\n      this.setState({message:input.target.value})\n\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({message:''})\n    }\n\n    render() {\n        return (\n            <form className=\"send-message-form\"\n                  onSubmit={this.handleSubmit}\n            >\n                <input\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    placeholder=\"Start typing... Enter to send\"\n                    type=\"text\" />\n            </form>\n        )\n    }\n}\n \nexport {SendMessageForm};","import React from 'react';\nconst spinnerImage = require(\"../assets/imgs/spinner.gif\")\n\nconst Spinner=()=>(\n   <span style={{display: \"flex\", width:\"100%\", justifyContent:\"center\"}}><img src={spinnerImage} className=\"spinner\" alt=\"spinner\"/></span>\n)\n\nexport { Spinner }","import React, { Component } from \"react\";\nimport \"./login.css\";\nimport {Spinner} from \"../components/spinner\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  onChangeHandle(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitHandle(event) {\n    event.preventDefault();\n    // references App.js Function\n    const { username, password } = this.state\n    this.props.login({username , password});\n  }\n\n  render() {\n    let button = <button type=\"submit\" className=\"btn btn-primary btn-block btn-large\" >\n                    Let me in\n                  </button>\n    if(this.props.loading){\n      button = <Spinner />\n    }\n    return (\n      <div className=\"login\">\n        <h1>ChatR</h1>\n        <form method=\"get\" onSubmit={this.submitHandle.bind(this)}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={this.state.username}\n            onChange={this.onChangeHandle.bind(this)}\n            name=\"username\"\n            placeholder=\"Username\"\n            required=\"required\"\n          />\n          <input\n            className=\"input\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.onChangeHandle.bind(this)}\n            name=\"password\"\n            placeholder=\"Password\"\n            required=\"required\"\n          />\n          {button}\n          <span className=\"error\">{this.props.error}</span>\n        </form>\n        <small>New accounts will be automatically created</small>\n      </div>\n    );\n  }\n}\n\nexport { Login };\n","import React from 'react';\n// import {NavLink} from \"react-router-dom\"\n\nimport classes from \"./NavigationItem.module.css\"\n\nconst navigationItem = (props)=>{\n  return (\n    <li className={classes.NavigationItem}>\n      {/* <NavLink activeClassName={classes.active} exact to={props.link} >  */}\n        {props.children}\n      {/* </NavLink> */}\n    </li>)\n}\n\nexport default navigationItem","import React from 'react';\nimport classes from \"./NavigationItems.module.css\"\nimport NavigationItem  from \"./navigationItem\"\n\nconst navigationItems = props => {\n  const authenticatedRoutes = (          \n    <React.Fragment>\n      {/* <NavigationItem link=\"/\">Orders</NavigationItem> */}\n      <NavigationItem link=\"/\"><button onClick={props.logout}>Logout</button></NavigationItem>\n    </React.Fragment>\n  )\n  return (\n    <ul className={classes.NavigationItems}>\n      {/* <NavigationItem link=\"/\"><a href=\"/\">Home</a></NavigationItem> */}\n      {\n          // props.isAuthenticated? <NavigationItem link=\"/auth\">Login</NavigationItem> : authenticatedRoutes\n          authenticatedRoutes\n      }\n    </ul>\n  )\n}\n\nexport default navigationItems","import React from 'react';\nimport classes from \"./ToggleButton.module.css\"\n\nconst toggleButton = (props) => {\n    return (\n      <div onClick={props.click} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n}\n \nexport default toggleButton;","import React from 'react';\nimport classes from \"./Toolbar.module.css\"\nimport NavigationItems  from \"../navigationItems\"\nimport ToggleButton  from \"../SideDrawer/toggleButton\"\n\n// import Logo from \"../../components/Logo\"\nconst toolbar =props =>{\n  \n  return(\n    <header className={classes.Toolbar}>\n      <ToggleButton click={props.drawerToggleClicked}/>\n      <div className={classes.Logo}>\n        {/* <Logo /> */}\n      </div>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n      </nav>\n    </header>\n  )\n}\n\nexport default toolbar","import React from 'react';\nimport classes from \"./Backdrop.module.css\"\n\nconst backdrop= props =>{\n    return props.show ? <div className={classes.Backdrop} onClick={props.click}></div>: null\n}\n\nexport default backdrop","import React from 'react';\n// import Logo from \"../../components/Logo\"\nimport NavigationItems from \"../navigationItems\"\nimport classes from \"./SideDrawer.module.css\"\nimport Backdrop from \"../../Backdrop\"\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close]\n  if(props.visible){\n    attachedClasses =[classes.SideDrawer,classes.Open]\n  }\n  return (\n    <React.Fragment>\n      <Backdrop show={props.visible} click={props.toggleSideDrawer}/>\n      <div className={attachedClasses.join(\" \") }  onClick={props.toggleSideDrawer}>\n        <div className={classes.Logo}>\n          {/* <Logo /> */}\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n        </nav>\n      </div>\n    </React.Fragment>\n\n   );\n}\n \nexport default sideDrawer;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  RoomList,\n  MessageList,\n  NewRoomForm,\n  SendMessageForm,\n  Login\n} from \"./components\";\n\nimport Toolbar from \"./navigation/toolbar\"\nimport SideDrawer from \"./navigation/SideDrawer\"\n\nimport openSocket from \"socket.io-client\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error:\"\",\n      loading: false,\n      showSideBar:false\n    };\n    this.environmentPort =\n      process.env.NODE_ENV !== \"production\" ? \"http://localhost:3030\" : \"/\"; //used to set port either to 3030 or /\n    this.sendMessageHandle = this.sendMessage.bind(this);\n    this.addRoomHandle = this.addRoom.bind(this);\n    this.switchRoomHandle = this.switchRoom.bind(this);\n  }\n\n  componentDidMount() {\n    //setting up socket\n      this.socket = openSocket.connect(this.environmentPort); //when running locally connect to localhost:3030\n      this.socket.on(\"new_message\", data => {\n        this.updateMessages(data);\n      });\n      this.socket.on(\"initialize\", data => {\n        // initializing the app state\n        this.setState({\n          roomList:data.rooms,\n          roomName: data.currentRoom,\n          messages: data.messages\n        }); \n      });\n      this.socket.on(\"createRoom\", data => {\n        this.updateRooms(data.rooms);\n      });\n\n      this.socket.on(\"switchRoom\", data => {\n        this.setState({ roomName: data.roomName, messages: data.messages });\n      });\n\n  }\n\n  componentDidUpdate(){\n    if(this.state.username){\n      this.socket.emit(\"username\", { username: this.state.username });\n    }\n  }\n\n  updateMessages = data => {\n    //called when new message received\n    let msgData = [];\n    msgData = this.state.messages;\n    msgData.push(data);\n    this.setState({ messages: msgData });\n  };\n\n  switchRoom(newRoom) {\n    this.setState({ roomName: newRoom, messages: [] });\n    this.socket.emit(\"switchRoom\", { roomName: newRoom });\n  }\n\n  updateRooms(rooms) {\n    this.setState({ roomList: rooms });\n  }\n\n  sendMessage(msg) {\n    //handle to send message\n    //message sent to server and then handled by updateMessages()\n    this.socket.emit(\"new_message\", { message: msg });\n  }\n\n  addRoom(newRoom) {\n    //adds room through new room form\n    const rooms = [...this.state.roomList];\n    rooms.push(newRoom);\n    this.setState({\n      roomList: rooms\n    });\n    this.socket.emit(\"createRoom\", { roomName: newRoom });\n  }\n\n  userLogin({ username, password }) {\n    //used to authenticate the user\n    this.setState({loading: true, error:\"\"})\n    axios.post(this.environmentPort, { password, username })\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            loading: false,\n            error: \"\",\n            username: response.data.username\n          });\n        } else {\n          this.setState({\n            loading:false,\n            error: \"something went wrong\"\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({\n          username: null,\n          error: \"something went wrong\"\n        });\n      });\n  }\n\n  showSideBar=()=>{\n    this.setState({\n      showSideBar:true,\n    })\n  }\n\n  sideDrawerToggleHandler =()=>{\n    this.setState((prevState)=>{\n      return {showSideBar: !prevState.showSideBar}\n    })\n  }\n\n  logout=()=>{\n    this.setState({\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error:\"\",\n    })\n  }\n\n  render() {\n    if (!this.state.username) {\n      return <Login loading={this.state.loading} error={this.state.error} login={this.userLogin.bind(this)} />;\n    }\n    return (\n      <div className=\"app\">\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} logout={this.logout}/>\n        <SideDrawer visible={this.state.showSideBar} toggleSideDrawer={this.sideDrawerToggleHandler} logout={this.logout}/>\n        <div className=\"main-area\">\n        <section className=\"side-section\">\n        <RoomList\n          switchRoom={this.switchRoomHandle}\n          selectedRoom={this.state.roomName}\n          roomList={this.state.roomList}\n        />\n        <NewRoomForm addRoom={this.addRoomHandle} />\n        </section>\n        <main className=\"main-section\">\n        <MessageList\n          messageData={this.state.messages}\n          currentUser={this.state.username}\n        />\n        <SendMessageForm sendMessage={this.sendMessageHandle} />\n        </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2aj-k\",\"Logo\":\"Toolbar_Logo__s8zh_\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1uL-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__Sincj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Y0gB\",\"active\":\"NavigationItem_active__OXcS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"ToggleButton_DrawerToggle__2KfFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__14PyZ\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.be0d9fd5.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__o0gcg\",\"Open\":\"SideDrawer_Open__20umz\",\"Close\":\"SideDrawer_Close__2Aas8\",\"Logo\":\"SideDrawer_Logo__1nkQA\"};"],"sourceRoot":""}