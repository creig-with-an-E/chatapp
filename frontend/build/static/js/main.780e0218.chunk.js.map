{"version":3,"sources":["components/button.js","components/Message.js","components/MessageList.js","components/NewRoomForm.js","components/RoomList.js","components/SendMessageForm.js","components/login.js","components/spinner.js","navigation/navigationItems/navigationItem/index.js","navigation/navigationItems/index.js","navigation/SideDrawer/toggleButton/index.js","navigation/toolbar/index.js","Backdrop/index.js","navigation/SideDrawer/index.js","App.js","serviceWorker.js","index.js","navigation/toolbar/Toolbar.module.css","navigation/navigationItems/NavigationItems.module.css","navigation/navigationItems/navigationItem/NavigationItem.module.css","navigation/SideDrawer/toggleButton/ToggleButton.module.css","Backdrop/Backdrop.module.css","assets/imgs/spinner.gif","navigation/SideDrawer/SideDrawer.module.css"],"names":["Button","props","react_default","a","createElement","type","className","disabled","children","Message","currentUser","username","style","marginLeft","fontWeight","fontSize","text","MessageList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottom","element","scrollIntoView","behavior","block","React","createRef","_this2","messageData","map","message","index","Message_Message","key","chat","name","ref","el","Component","NewRoomForm","state","roomName","submitHandle","event","preventDefault","addRoom","setState","changeHandle","input","target","value","bind","assertThisInitialized","onSubmit","onChange","placeholder","required","id","RoomList","roomList","switchRoom","prevProps","prevState","active","selectedRoom","color","href","concat","onClick","_this3","renderElement","SendMessageForm","handleChange","handleSubmit","sendMessage","Login","toggleLogin","registrationLinkActive","password","error","password_confirmation_error","confirm_password","buttonDisabled","clearErrorHandler","_this$state","length","defineProperty","_this$state2","signup","login","button","button_Button","Fragment","password_confirm","onChangeHandle","loading","spinner_Spinner","method","spinnerImage","require","Spinner","display","width","justifyContent","src","alt","navigationItem","classes","NavigationItem","navigationItems","authenticatedRoutes","navigationItems_navigationItem","link","logout","NavigationItems","toggleButton","click","DrawerToggle","toolbar","Toolbar","SideDrawer_toggleButton","drawerToggleClicked","Logo","DesktopOnly","navigation_navigationItems","isAuthenticated","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","visible","Open","toggleSideDrawer","join","App","updateMessages","data","msgData","messages","push","userLoginHandle","_ref","axios","post","serverUrl","then","response","status","catch","finally","userSignupHandle","_ref2","showSideBar","sideDrawerToggleHandler","sendMessageHandle","addRoomHandle","switchRoomHandle","socket","openSocket","connect","on","rooms","currentRoom","updateRooms","emit","newRoom","msg","toConsumableArray","navigation_toolbar","RoomList_RoomList","NewRoomForm_NewRoomForm","MessageList_MessageList","SendMessageForm_SendMessageForm","login_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6NAEMA,EAAQ,SAACC,GAAD,OACZC,EAAAC,EAAAC,cAAA,UAAQC,KAAK,SAASC,UAAU,sCAAsCC,SAAUN,EAAMM,UACnFN,EAAMO,WCFLC,EAAU,SAAAR,GACd,IAAMS,EAAcT,EAAMS,cAAgBT,EAAMU,SAAW,KAAO,KAClE,OACET,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUM,MAAOF,EAAY,CAACG,WAAW,QAAQ,IAC9DX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAmBM,MAAO,CAACE,WAAW,OAAOC,SAAS,KAClEL,GAAeT,EAAMU,UACxBT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZL,EAAMe,QCNTC,cACJ,SAAAA,EAAYhB,GAAM,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IAChBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpB,KAURwB,eAAe,WACbP,EAAKQ,QAAQC,eAAe,CAACC,SAAU,SAAUC,MAAM,SAVvDX,EAAKQ,QAAUI,IAAMC,YAFLb,mFAKhBG,KAAKI,8DAIHJ,KAAKI,kDAKD,IAAAO,EAAAX,KACN,OACEnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACZe,KAAKpB,MAAMgC,YAAYC,IAAI,SAACC,EAASC,GACpC,OACElC,EAAAC,EAAAC,cAACiC,EAAD,CACEC,IAAKF,EACLpB,KAAMmB,EAAQI,KACd5B,SAAUwB,EAAQK,KAClB9B,YAAasB,EAAK/B,MAAMS,gBAI9BR,EAAAC,EAAAC,cAAA,OAAKqC,IAAK,SAAAC,GAAKV,EAAKN,QAAUgB,aA5BZZ,IAAMa,WCD1BC,cACH,SAAAA,IAAa,IAAA1B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACX1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,QAIFwB,MAAQ,CACNC,SAAS,IANE5B,EASZ6B,aAAa,SAACC,GAEZA,EAAMC,iBACN/B,EAAKjB,MAAMiD,QAAQhC,EAAK2B,MAAMC,UAC9B5B,EAAKiC,SAAS,CAACL,SAAS,MAbd5B,EAgBZkC,aAAa,SAACC,GAEZnC,EAAKiC,SAAS,CACZL,SAAUO,EAAMC,OAAOC,SAjB1BrC,EAAK6B,aAAe7B,EAAK6B,aAAaS,KAAlBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACpBA,EAAKkC,aAAelC,EAAKkC,aAAaI,KAAlBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KAHTA,wEAyBR,OACEhB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,QAAMsD,SAAUrC,KAAK0B,cACnB7C,EAAAC,EAAAC,cAAA,SACIuD,SAAUtC,KAAK+B,aACfG,MAAOlC,KAAKwB,MAAMC,SAClBzC,KAAK,OACLuD,YAAY,cACZC,UAAQ,IACZ3D,EAAAC,EAAAC,cAAA,UAAQ0D,GAAG,kBAAkBzD,KAAK,UAAlC,cAnCYsC,aCApBoB,6MACJlB,MAAO,CACLmB,SAAS,8EAEAlB,GACTzB,KAAKpB,MAAMgE,WAAWnB,+CAGtBzB,KAAK8B,SAAS,CACZa,SAAU3C,KAAKpB,MAAM+D,sDAGNE,EAAWC,GACzB9C,KAAKpB,MAAM+D,WAAaE,EAAUF,UACnC3C,KAAK8B,SAAS,CACZa,SAAU3C,KAAKpB,MAAM+D,iDAKblB,EAAUV,GAAM,IAAAJ,EAAAX,KACtB+C,EAAStB,IAAazB,KAAKpB,MAAMoE,aAAe,CAACC,MAAM,UAAWxD,WAAY,QAAW,GACjG,OACEZ,EAAAC,EAAAC,cAAA,MAAIkC,IAAKF,EAAO9B,UAAW,QACvBJ,EAAAC,EAAAC,cAAA,KACEQ,MAAOwD,EACPG,KAAI,IAAAC,OAAM1B,GACV2B,QAAS,kBAAMzC,EAAKiC,WAAWnB,KAE9B,IALH,IAAA0B,OAMQ1B,sCAML,IAAA4B,EAAArD,KACT,OACEnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UACGiB,KAAKwB,MAAMmB,SAAS9B,IAAI,SAACY,EAAUV,GAEpC,OACEsC,EAAKC,cAAc7B,EAASV,cA5CbO,aCAjBiC,cACF,SAAAA,EAAY3E,GAAM,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACd1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMpB,KAQV4E,aAAa,SAACxB,GAEZnC,EAAKiC,SAAS,CAAChB,QAAQkB,EAAMC,OAAOC,SAXpBrC,EAelB4D,aAAa,SAAC9B,GACVA,EAAMC,iBACN/B,EAAKjB,MAAM8E,YAAY7D,EAAK2B,MAAMV,SAClCjB,EAAKiC,SAAS,CAAChB,QAAQ,MAhBvBjB,EAAK2B,MAAM,CACPV,QAAS,IAEbjB,EAAK2D,aAAe3D,EAAK2D,aAAarB,KAAlBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACpBA,EAAK4D,aAAe5D,EAAK4D,aAAatB,KAAlBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KANNA,wEAsBd,OACIhB,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBACVoD,SAAUrC,KAAKyD,cAEjB5E,EAAAC,EAAAC,cAAA,SACIE,UAAU,aACVqD,SAAUtC,KAAKwD,aACftB,MAAOlC,KAAKwB,MAAMV,QAClByB,YAAY,gCACZvD,KAAK,SACTH,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASkD,MAAM,OAAOjD,UAAU,0BAjC9BqC,qBCExBqC,qBACJ,SAAAA,EAAY/E,GAAO,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACjB9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMpB,KA2ERgF,YAAY,WACV/D,EAAKiC,SAAS,CACZ+B,wBAAyBhE,EAAK2B,MAAMqC,0BA5EtChE,EAAK2B,MAAQ,CACXlC,SAAU,GACVwE,SAAU,GACVC,MAAM,GACNC,4BAA4B,GAC5BC,iBAAiB,GACjBJ,wBAAwB,EACxBK,gBAAgB,GATDrE,kFAaAgD,EAAUC,GACxB9C,KAAKpB,MAAMmF,OAAS/D,KAAKpB,MAAMmF,QAAUlB,EAAUkB,OAEpD/D,KAAK8B,SAAS,CAAEgC,SAAS,KAExB9D,KAAKwB,MAAMqC,yBAA2Bf,EAAUe,yBAEjD7D,KAAK8B,SAAS,CAAEgC,SAAS,GAAIG,iBAAiB,GAAGD,4BAA4B,KAC7EhE,KAAKpB,MAAMuF,qBARwB,IAAAC,EAUUpE,KAAKwB,MAA7CsC,EAV8BM,EAU9BN,SAAUG,EAVoBG,EAUpBH,iBAAkB3E,EAVE8E,EAUF9E,SAChCU,KAAKwB,MAAMqC,uBAETvE,IAAawD,EAAUxD,UACxB2E,IAAqBnB,EAAUmB,kBAC9BH,IAAahB,EAAUgB,WAErBxE,EAAS+E,OAAQ,GAAKP,IAAaG,GAAoBH,EAASO,OAAQ,EAEzErE,KAAK8B,SAAS,CAACoC,gBAAgB,EAAOF,4BAA4B,MAE/DF,EAASO,OAAO,GAAiB,KAAZP,EACtB9D,KAAK8B,SAAS,CAACkC,4BAA4B,uBAE3ChE,KAAK8B,SAAS,CAACkC,4BAA4B,KAE1CF,IAAaG,GAAiC,KAAbH,GAAwC,KAArBG,GACrDjE,KAAK8B,SAAS,CAACkC,4BAA4B,yBAE7ChE,KAAK8B,SAAS,CAACoC,gBAAgB,MAKhCJ,IAAahB,EAAUgB,UAAYxE,IAAawD,EAAUxD,WACxDwE,EAASO,OAAS,GAAkB,KAAb/E,EACxBU,KAAK8B,SAAS,CAACoC,gBAAe,IAG5BlE,KAAK8B,SAAS,CAACoC,gBAAe,4CAOzBvC,GACb3B,KAAKpB,MAAMuF,oBACXnE,KAAK8B,SAALhC,OAAAwE,EAAA,EAAAxE,CAAA,GACG6B,EAAMM,OAAOd,KAAOQ,EAAMM,OAAOC,6CAIzBP,GACXA,EAAMC,iBADY,IAAA2C,EAEavE,KAAKwB,MAA5BlC,EAFUiF,EAEVjF,SAAUwE,EAFAS,EAEAT,SACf9D,KAAKwB,MAAMqC,uBACZ7D,KAAKpB,MAAM4F,OAAO,CAAClF,WAAWwE,aAE9B9D,KAAKpB,MAAM6F,MAAM,CAACnF,WAAWwE,8CAW/B,IAAIY,EAAS7F,EAAAC,EAAAC,cAAC4F,EAAD,CAAQzF,SAAUc,KAAKwB,MAAM0C,gBAA7B,qBAEGrF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBgE,MAAM,WAqBvD,OAlBGjD,KAAKwB,MAAMqC,yBACZa,EACE7F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KACE/F,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QACfD,KAAK,WAAWkD,MAAOlC,KAAKwB,MAAMqD,iBAClCvC,SAAUtC,KAAK8E,eAAe3C,KAAKnC,MAAOmB,KAAK,mBAC/CoB,YAAY,mBAAmBC,UAAQ,IAEzC3D,EAAAC,EAAAC,cAAC4F,EAAD,CAAQzF,SAAUc,KAAKwB,MAAM0C,gBAA7B,0BAEErF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,qBAAqBgE,MAAM,aAK7CjD,KAAKpB,MAAMmG,UACZL,EAAS7F,EAAAC,EAAAC,cAACiG,EAAD,OAGTnG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMkG,OAAO,MAAM5C,SAAUrC,KAAK0B,aAAaS,KAAKnC,OAClDnB,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVD,KAAK,QAAQkD,MAAOlC,KAAKwB,MAAMlC,SAC/BgD,SAAUtC,KAAK8E,eAAe3C,KAAKnC,MAAQmB,KAAK,WAChDoB,YAAY,QAASC,UAAQ,IAE/B3D,EAAAC,EAAAC,cAAA,SACEE,UAAU,QAAQD,KAAK,WACvBkD,MAAOlC,KAAKwB,MAAMsC,SAAUxB,SAAUtC,KAAK8E,eAAe3C,KAAKnC,MAC/DmB,KAAK,WAAWoB,YAAY,WAC5BC,UAAQ,IAETkC,EACD7F,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASe,KAAKwB,MAAMwC,6BACpCnF,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASe,KAAKpB,MAAMmF,QAEtClF,EAAAC,EAAAC,cAAA,SAAOqE,QAASpD,KAAK4D,aAAe5D,KAAKwB,MAAMqC,uBAAyB,iBAAkB,gCA/H9EvC,cCHd4D,EAAeC,EAAQ,IAEvBC,EAAQ,kBACXvG,EAAAC,EAAAC,cAAA,QAAMQ,MAAO,CAAC8F,QAAS,OAAQC,MAAM,OAAQC,eAAe,WAAW1G,EAAAC,EAAAC,cAAA,OAAKyG,IAAKN,EAAcjG,UAAU,UAAUwG,IAAI,iECU3GC,EATQ,SAAC9G,GACtB,OACEC,EAAAC,EAAAC,cAAA,MAAIE,UAAW0G,IAAQC,gBAElBhH,EAAMO,WCaA0G,EAlBS,SAAAjH,GACtB,IAAMkH,EACJjH,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KACE/F,EAAAC,EAAAC,cAACgH,EAAD,CAAgBC,KAAK,KAAInH,EAAAC,EAAAC,cAAA,8BACzBF,EAAAC,EAAAC,cAACgH,EAAD,CAAgBC,KAAK,KAAInH,EAAAC,EAAAC,cAAA,UAAQqE,QAASxE,EAAMqH,QAAvB,kBAAkDpH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAG5F,OACEJ,EAAAC,EAAAC,cAAA,MAAIE,UAAW0G,IAAQO,iBAIjBJ,qBCHKK,EAVM,SAACvH,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKqE,QAASxE,EAAMwH,MAAOnH,UAAW0G,IAAQU,cAC5CxH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,cCaOuH,EAfA,SAAA1H,GAEb,OACEC,EAAAC,EAAAC,cAAA,UAAQE,UAAW0G,IAAQY,SACzB1H,EAAAC,EAAAC,cAACyH,EAAD,CAAcJ,MAAOxH,EAAM6H,sBAC3B5H,EAAAC,EAAAC,cAAA,OAAKE,UAAW0G,IAAQe,MACtB7H,EAAAC,EAAAC,cAAA,+BAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAW0G,IAAQgB,aACtB9H,EAAAC,EAAAC,cAAC6H,EAAD,CAAiBC,gBAAiBjI,EAAMiI,gBAAiBZ,OAAQrH,EAAMqH,6CCRhEa,EAJC,SAAAlI,GACZ,OAAOA,EAAMmI,KAAOlI,EAAAC,EAAAC,cAAA,OAAKE,UAAW0G,IAAQqB,SAAU5D,QAASxE,EAAMwH,QAAe,MCuBzEa,EArBI,SAACrI,GAClB,IAAIsI,EAAkB,CAACvB,IAAQwB,WAAYxB,IAAQyB,OAInD,OAHGxI,EAAMyI,UACPH,EAAiB,CAACvB,IAAQwB,WAAWxB,IAAQ2B,OAG7CzI,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,SAAP,KACE/F,EAAAC,EAAAC,cAACiI,EAAD,CAAUD,KAAMnI,EAAMyI,QAASjB,MAAOxH,EAAM2I,mBAC5C1I,EAAAC,EAAAC,cAAA,OAAKE,UAAWiI,EAAgBM,KAAK,KAAQpE,QAASxE,EAAM2I,kBAC1D1I,EAAAC,EAAAC,cAAA,OAAKE,UAAW0G,IAAQe,OAGxB7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6H,EAAD,CAAiBC,gBAAiBjI,EAAMiI,gBAAiBZ,OAAQrH,EAAMqH,8BCwMlEwB,cA3Mb,SAAAA,EAAY7I,GAAO,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,IACjB5H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2H,GAAAtH,KAAAH,KAAMpB,KA6CR8I,eAAiB,SAAAC,GAEf,IAAIC,EAAU,IACdA,EAAU/H,EAAK2B,MAAMqG,UACbC,KAAKH,GACb9H,EAAKiC,SAAS,CAAE+F,SAAUD,KAnDT/H,EA+EnBkI,gBAAkB,SAAAC,GAA4B,IAAzB1I,EAAyB0I,EAAzB1I,SAAUwE,EAAekE,EAAflE,SAE7BjE,EAAKiC,SAAS,CAAEiD,SAAS,EAAMhB,MAAO,KACtCkE,IAAMC,KAAKrI,EAAKsI,UAAU,QAAS,CAAErE,WAAUxE,aAC5C8I,KAAK,SAAAC,GACoB,MAApBA,EAASC,OAEXzI,EAAKiC,SAAS,CACZiC,MAAO,GACPzE,SAAU+I,EAASV,KAAKrI,WAEE,MAApB+I,EAASC,OAEjBzI,EAAKiC,SAAS,CAAEiC,MAAO,+BACI,MAApBsE,EAASC,OAChBzI,EAAKiC,SAAS,CAAEiC,MAAO,mBAEvBlE,EAAKiC,SAAS,CAACiC,MAAM,2BAGxBwE,MAAM,SAAAxE,GACLlE,EAAKiC,SAAS,CAAExC,SAAU,KACxByE,MAAO,2BAERyE,QAAQ,kBAAI3I,EAAKiC,SAAS,CAACiD,SAAS,OAvGxBlF,EA4GnB4I,iBAAiB,SAAAC,GAAuB,IAArBpJ,EAAqBoJ,EAArBpJ,SAASwE,EAAY4E,EAAZ5E,SAE1BjE,EAAKiC,SAAS,CAACiD,SAAQ,IACvBkD,IAAMC,KAAKrI,EAAKsI,UAAY,SAAS,CAAC7I,WAASwE,aAC5CsE,KAAK,SAAAC,GACoB,MAApBA,EAASC,OAEXzI,EAAKiC,SAAS,CACZiC,MAAO,GACPzE,SAAU+I,EAASV,KAAKrI,WAEE,MAApB+I,EAASC,OAEjBzI,EAAKiC,SAAS,CAAEiC,MAAO,wBAEvBlE,EAAKiC,SAAS,CAACiC,MAAM,2BAEtBwE,MAAM,SAAAxE,GACPlE,EAAKiC,SAAS,CAAExC,SAAU,KACxByE,MAAO,2BAERyE,QAAQ,WACT3I,EAAKiC,SAAS,CAACiD,SAAS,OAlIXlF,EAuInBoG,OAAS,WACPpG,EAAKiC,SAAS,CACZ+F,SAAU,GACVlF,SAAU,GACVlB,SAAU,KACVnC,SAAU,KACVyE,MAAO,MA7IQlE,EAiJnB8I,YAAc,WACZ9I,EAAKiC,SAAS,CACZ6G,aAAa,KAnJE9I,EAuJnB+I,wBAA0B,WACxB/I,EAAKiC,SAAS,SAAAgB,GACZ,MAAO,CAAE6F,aAAc7F,EAAU6F,gBAzJlB9I,EA6JnBsE,kBAAoB,WAClBtE,EAAKiC,SAAS,CAAEiC,MAAO,GAAIgB,SAAS,KA5JpClF,EAAK2B,MAAQ,CACXqG,SAAU,GACVlF,SAAU,GACVlB,SAAU,KACVnC,SAAU,KACVyE,MAAO,GACPgB,SAAS,EACT4D,aAAa,GAEf9I,EAAKsI,UAA+E,IACpFtI,EAAKgJ,kBAAoBhJ,EAAK6D,YAAYvB,KAAjBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACzBA,EAAKiJ,cAAgBjJ,EAAKgC,QAAQM,KAAbrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACrBA,EAAKkJ,iBAAmBlJ,EAAK+C,WAAWT,KAAhBrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KAdPA,mFAiBC,IAAAc,EAAAX,KAElBA,KAAKgJ,OAASC,IAAWC,QAAQlJ,KAAKmI,WACtCnI,KAAKgJ,OAAOG,GAAG,cAAe,SAAAxB,GAC5BhH,EAAK+G,eAAeC,KAEtB3H,KAAKgJ,OAAOG,GAAG,aAAc,SAAAxB,GAE3BhH,EAAKmB,SAAS,CACZa,SAAUgF,EAAKyB,MACf3H,SAAUkG,EAAK0B,YACfxB,SAAUF,EAAKE,aAGnB7H,KAAKgJ,OAAOG,GAAG,aAAc,SAAAxB,GAC3BhH,EAAK2I,YAAY3B,EAAKyB,SAGxBpJ,KAAKgJ,OAAOG,GAAG,aAAc,SAAAxB,GAC3BhH,EAAKmB,SAAS,CAAEL,SAAUkG,EAAKlG,SAAUoG,SAAUF,EAAKE,wDAIzChF,EAAWC,GACxB9C,KAAKwB,MAAMlC,UAAYU,KAAKwB,MAAMlC,WAAawD,EAAUxD,UAC3DU,KAAKgJ,OAAOO,KAAK,WAAY,CAAEjK,SAAUU,KAAKwB,MAAMlC,8CAY7CkK,GACTxJ,KAAK8B,SAAS,CAAEL,SAAU+H,EAAS3B,SAAU,KAC7C7H,KAAKgJ,OAAOO,KAAK,aAAc,CAAE9H,SAAU+H,wCAGjCJ,GACVpJ,KAAK8B,SAAS,CAAEa,SAAUyG,wCAGhBK,GAGVzJ,KAAKgJ,OAAOO,KAAK,cAAe,CAAEzI,QAAS2I,oCAGrCD,GAEN,IAAMJ,EAAKtJ,OAAA4J,EAAA,EAAA5J,CAAOE,KAAKwB,MAAMmB,UAC7ByG,EAAMtB,KAAK0B,GACXxJ,KAAK8B,SAAS,CACZa,SAAUyG,IAEZpJ,KAAKgJ,OAAOO,KAAK,aAAc,CAAE9H,SAAU+H,qCAsF3C,OAAKxJ,KAAKwB,MAAMlC,SASdT,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC4K,EAAD,CACElD,oBAAqBzG,KAAK4I,wBAC1B3C,OAAQjG,KAAKiG,SAEfpH,EAAAC,EAAAC,cAACoI,EAAD,CACEE,QAASrH,KAAKwB,MAAMmH,YACpBpB,iBAAkBvH,KAAK4I,wBACvB3C,OAAQjG,KAAKiG,SAEfpH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,WAASE,UAAU,gBACjBJ,EAAAC,EAAAC,cAAC6K,EAAD,CACEhH,WAAY5C,KAAK+I,iBACjB/F,aAAchD,KAAKwB,MAAMC,SACzBkB,SAAU3C,KAAKwB,MAAMmB,WAEvB9D,EAAAC,EAAAC,cAAC8K,EAAD,CAAahI,QAAS7B,KAAK8I,iBAE7BjK,EAAAC,EAAAC,cAAA,QAAME,UAAU,gBACdJ,EAAAC,EAAAC,cAAC+K,EAAD,CACElJ,YAAaZ,KAAKwB,MAAMqG,SACxBxI,YAAaW,KAAKwB,MAAMlC,WAE1BT,EAAAC,EAAAC,cAACgL,EAAD,CAAiBrG,YAAa1D,KAAK6I,uBA/BvChK,EAAAC,EAAAC,cAACiL,EAAD,CAAOjF,QAAS/E,KAAKwB,MAAMuD,QAASP,OAAQxE,KAAKyI,iBAC9C1E,MAAO/D,KAAKwB,MAAMuC,MAAOU,MAAOzE,KAAK+H,gBACrC5D,kBAAmBnE,KAAKmE,2BAvKjB7C,aCHE2I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO1L,EAAAC,EAAAC,cAACyL,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC,mCElInBC,EAAAC,QAAA,CAAkB1E,QAAA,yBAAAG,KAAA,sBAAAC,YAAA,kDCAlBqE,EAAAC,QAAA,CAAkB/E,gBAAA,8DCAlB8E,EAAAC,QAAA,CAAkBrF,eAAA,uCAAA7C,OAAA,oDCAlBiI,EAAAC,QAAA,CAAkB5E,aAAA,wDCAlB2E,EAAAC,QAAA,CAAkBjE,SAAA,0GCDlBgE,EAAAC,QAAiBC,EAAAC,EAAuB,uDCCxCH,EAAAC,QAAA,CAAkB9D,WAAA,+BAAAG,KAAA,yBAAAF,MAAA,0BAAAV,KAAA","file":"static/js/main.780e0218.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button =(props)=>(\n  <button type=\"submit\" className=\"btn btn-primary btn-block btn-large\" disabled={props.disabled}>\n    {props.children}\n  </button>\n)\n\nexport {Button}","import React from \"react\";\n\nconst Message = props => {\n  const currentUser = props.currentUser === props.username ? \"Me\" : null;\n  return (\n    <div className=\"message\" style={currentUser?{marginLeft:\"30px\"}:{}}>\n      <div className=\"message-username\" style={{fontWeight:\"bold\",fontSize:16}}>\n        {currentUser || props.username}</div>\n      <div className=\"message-text\" >\n        {props.text}\n      </div>\n    </div>\n  );\n};\n\nexport { Message };\n","import React from \"react\";\nimport { Message } from \"../components\";\n\nclass MessageList extends React.Component{\n  constructor(props){\n    super(props)\n    this.element = React.createRef()\n  }\n  componentDidMount(){\n    this.scrollToBottom()\n  }\n\n  componentDidUpdate(){\n      this.scrollToBottom()\n  }\n  scrollToBottom=()=>{\n    this.element.scrollIntoView({behavior: \"smooth\", block:\"end\"})\n  }\n  render(){\n    return (\n      <div className=\"message-list\">\n        {this.props.messageData.map((message, index) => {\n          return (\n            <Message\n              key={index}\n              text={message.chat}\n              username={message.name}\n              currentUser={this.props.currentUser}\n            />\n          );\n        })} \n        <div ref={el=>{this.element = el}}></div>\n      </div>\n    )\n  }\n}\n\nexport { MessageList };\n","import React, { Component } from 'react';\n\nclass NewRoomForm extends Component {\n   constructor(){\n     super()\n     this.submitHandle = this.submitHandle.bind(this);\n     this.changeHandle = this.changeHandle.bind(this)\n   } \n   state = {\n     roomName:\"\"\n   }\n\n    submitHandle=(event)=>{\n      //handles the form submit action\n      event.preventDefault()\n      this.props.addRoom(this.state.roomName)\n      this.setState({roomName:''})\n    }\n\n    changeHandle=(input)=>{\n      //updates the state when text enter in form\n      this.setState({\n        roomName: input.target.value\n      })\n      // console.log(this.state.roomName)\n    }\n\n    render() { \n        return (\n          <div className=\"new-room-form\">\n            <form onSubmit={this.submitHandle}>\n              <input\n                  onChange={this.changeHandle}\n                  value={this.state.roomName}\n                  type=\"text\" \n                  placeholder=\"Create room\" \n                  required />\n              <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n          </div>\n          );\n    }\n}\n \nexport {NewRoomForm};","import React, { Component } from \"react\";\n\nclass RoomList extends Component {\n  state ={\n    roomList:[]\n  }\n  switchRoom(roomName) {\n    this.props.switchRoom(roomName);\n  }\n  componentDidMount(){\n    this.setState({\n      roomList: this.props.roomList\n    })\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(this.props.roomList !== prevProps.roomList){\n      this.setState({\n        roomList: this.props.roomList\n      })\n    }\n  }\n\n  renderElement(roomName, index){\n    const active = roomName === this.props.selectedRoom ? {color:\"#FFC42D\", fontWeight: 'bold',} : {}\n  return(\n    <li key={index} className={\"room\"}>\n        <a\n          style={active}\n          href={`#${roomName}`}\n          onClick={() => this.switchRoom(roomName)}\n        >\n          {\" \"}\n           {` ${roomName}`}\n        </a>\n    </li>\n  )\n  }\n\n  render() {\n  return (\n    <div className=\"rooms-list\">\n    <h3>Available Rooms</h3>\n    <ul>\n      {this.state.roomList.map((roomName, index) => {\n      //selected room\n      return (\n        this.renderElement(roomName,index)\n      );\n      })}\n    </ul>\n    </div>\n  );\n  }\n}\n\nexport { RoomList };\n","import React, { Component } from 'react';\n\nclass SendMessageForm extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            message: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange=(input)=>{\n      //handles the state for message input field\n      this.setState({message:input.target.value})\n\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({message:''})\n    }\n\n    render() {\n        return (\n            <form className=\"send-message-form\"\n                  onSubmit={this.handleSubmit}\n            >\n                <input\n                    className=\"form-input\"\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    placeholder=\"Start typing... Enter to send\"\n                    type=\"text\" />\n                <input type=\"submit\" value=\"Send\" className=\"send-form-btn\"></input>\n            </form>\n        )\n    }\n}\n \nexport {SendMessageForm};","import React, { Component } from \"react\";\nimport \"./login.css\";\nimport { Spinner,Button } from \"../components\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",   //email\n      password: \"\",\n      error:\"\",\n      password_confirmation_error:\"\",   //used for password match error\n      confirm_password:\"\",\n      registrationLinkActive: false,\n      buttonDisabled: true\n    };\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(this.props.error && this.props.error !== prevProps.error){\n      /** checking the an error exists and  clearing the password field*/ \n      this.setState({ password:\"\" })\n    }\n    if(this.state.registrationLinkActive !== prevState.registrationLinkActive){\n      /** handling toggle between pages*/ \n      this.setState({ password:\"\", confirm_password:\"\",password_confirmation_error:\"\" })\n      this.props.clearErrorHandler()\n    }\n    const {password, confirm_password, username} = this.state\n    if(this.state.registrationLinkActive){\n      // handling password confirmation for signup\n      if(username !== prevState.username || \n        confirm_password !== prevState.confirm_password ||\n         password !== prevState.password ){\n        /** checking state has changed*/\n        if(username.length >5 && password === confirm_password && password.length >4){\n          // values valid\n          this.setState({buttonDisabled: false, password_confirmation_error:\"\"})\n        }else{\n          if(password.length<4 && password !==\"\"){\n            this.setState({password_confirmation_error:\"Password too short\"})\n          }else{\n            this.setState({password_confirmation_error:\"\"})\n          }\n          if(password !== confirm_password && password !== \"\" && confirm_password !== \"\"){\n            this.setState({password_confirmation_error:\"Passwords dont match\"})\n            }\n          this.setState({buttonDisabled: true})\n        }\n      }\n    }else{\n      /** first confirming if state has changed*/ \n      if(password !== prevState.password || username !== prevState.username){\n        if(password.length > 5 && username !== \"\"){\n          this.setState({buttonDisabled:false})\n        }else{\n            // if fields not valid values button stays in disabled state\n            this.setState({buttonDisabled:true})\n          }\n      }\n\n    }\n  }\n\n  onChangeHandle(event){\n    this.props.clearErrorHandler()\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitHandle(event) {\n    event.preventDefault();\n    const { username, password } = this.state\n    if(this.state.registrationLinkActive){\n      this.props.signup({username , password})\n    }else{\n      this.props.login({username , password})\n    }\n  }\n\n  toggleLogin=()=>{\n    this.setState({\n      registrationLinkActive: !this.state.registrationLinkActive\n    })\n  }\n\n  render() {\n    let button = <Button disabled={this.state.buttonDisabled}>\n                    Let me in &nbsp;&nbsp;\n                    <i className=\"fa fa-key fa-1.8x\" color=\"black\"></i>\n                  </Button>\n\n    if(this.state.registrationLinkActive){\n      button = (\n        <React.Fragment>\n          <input className=\"input\"\n            type=\"password\" value={this.state.password_confirm}\n            onChange={this.onChangeHandle.bind(this)} name=\"confirm_password\"\n            placeholder=\"Confirm Password\" required\n            />\n          <Button disabled={this.state.buttonDisabled}>\n            Create Account &nbsp;&nbsp;\n            <i className=\"fa fa-user fa-1.8x\" color=\"black\"></i>\n          </Button>\n        </React.Fragment>\n      )\n    }\n    if(this.props.loading){\n      button = <Spinner />\n    }\n    return (\n      <div className=\"login\">\n        <h1>Jibba•Jabba</h1>\n        <form method=\"get\" onSubmit={this.submitHandle.bind(this)}>\n          <input\n            className=\"input\"\n            type=\"email\" value={this.state.username}\n            onChange={this.onChangeHandle.bind(this)}  name=\"username\"\n            placeholder=\"Email\"  required\n          />\n          <input\n            className=\"input\" type=\"password\"\n            value={this.state.password} onChange={this.onChangeHandle.bind(this)}\n            name=\"password\" placeholder=\"Password\"\n            required\n          />\n          {button}\n          <span className=\"error\">{this.state.password_confirmation_error}</span>\n          <span className=\"error\">{this.props.error}</span>\n        </form>\n        <small onClick={this.toggleLogin} >{this.state.registrationLinkActive ? \"Returning User\": \"Create New Account ?\"}</small>\n      </div>\n    );\n  }\n}\n\n\nexport { Login };\n","import React from 'react';\nconst spinnerImage = require(\"../assets/imgs/spinner.gif\")\n\nconst Spinner=()=>(\n   <span style={{display: \"flex\", width:\"100%\", justifyContent:\"center\"}}><img src={spinnerImage} className=\"spinner\" alt=\"spinner\"/></span>\n)\n\nexport { Spinner }","import React from 'react';\n// import {NavLink} from \"react-router-dom\"\n\nimport classes from \"./NavigationItem.module.css\"\n\nconst navigationItem = (props)=>{\n  return (\n    <li className={classes.NavigationItem}>\n      {/* <NavLink activeClassName={classes.active} exact to={props.link} >  */}\n        {props.children}\n      {/* </NavLink> */}\n    </li>)\n}\n\nexport default navigationItem","import React from 'react';\nimport classes from \"./NavigationItems.module.css\"\nimport NavigationItem  from \"./navigationItem\"\n\nconst navigationItems = props => {\n  const authenticatedRoutes = (          \n    <React.Fragment>\n      <NavigationItem link=\"#\"><button >Switch Room</button></NavigationItem>\n      <NavigationItem link=\"/\"><button onClick={props.logout}>Logout &nbsp;&nbsp;<i className=\"fa fa-lock\"></i></button></NavigationItem>\n    </React.Fragment>\n  )\n  return (\n    <ul className={classes.NavigationItems}>\n      {/* <NavigationItem link=\"/\"><a href=\"/\">Home</a></NavigationItem> */}\n      {\n          // props.isAuthenticated? <NavigationItem link=\"/auth\">Login</NavigationItem> : authenticatedRoutes\n          authenticatedRoutes\n      }\n    </ul>\n  )\n}\n\nexport default navigationItems","import React from 'react';\nimport classes from \"./ToggleButton.module.css\"\n\nconst toggleButton = (props) => {\n    return (\n      <div onClick={props.click} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n}\n \nexport default toggleButton;","import React from 'react';\nimport classes from \"./Toolbar.module.css\"\nimport NavigationItems  from \"../navigationItems\"\nimport ToggleButton  from \"../SideDrawer/toggleButton\"\n\n// import Logo from \"../../components/Logo\"\nconst toolbar =props =>{\n  \n  return(\n    <header className={classes.Toolbar}>\n      <ToggleButton click={props.drawerToggleClicked}/>\n      <div className={classes.Logo}>\n        <h2>Jibba•Jabba</h2>\n      </div>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n      </nav>\n    </header>\n  )\n}\n\nexport default toolbar","import React from 'react';\nimport classes from \"./Backdrop.module.css\"\n\nconst backdrop= props =>{\n    return props.show ? <div className={classes.Backdrop} onClick={props.click}></div>: null\n}\n\nexport default backdrop","import React from 'react';\n// import Logo from \"../../components/Logo\"\nimport NavigationItems from \"../navigationItems\"\nimport classes from \"./SideDrawer.module.css\"\nimport Backdrop from \"../../Backdrop\"\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close]\n  if(props.visible){\n    attachedClasses =[classes.SideDrawer,classes.Open]\n  }\n  return (\n    <React.Fragment>\n      <Backdrop show={props.visible} click={props.toggleSideDrawer}/>\n      <div className={attachedClasses.join(\" \") }  onClick={props.toggleSideDrawer}>\n        <div className={classes.Logo}>\n          {/* <Logo /> */}\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n        </nav>\n      </div>\n    </React.Fragment>\n\n   );\n}\n \nexport default sideDrawer;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  RoomList,\n  MessageList,\n  NewRoomForm,\n  SendMessageForm,\n  Login\n} from \"./components\";\n\nimport Toolbar from \"./navigation/toolbar\";\nimport SideDrawer from \"./navigation/SideDrawer\";\n\nimport openSocket from \"socket.io-client\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error: \"\",\n      loading: false,\n      showSideBar: false\n    };\n    this.serverUrl = process.env.NODE_ENV !== \"production\" ? \"http://localhost:3030/\" : \"/\"; //used to set port either to 3030 or /\n    this.sendMessageHandle = this.sendMessage.bind(this);\n    this.addRoomHandle = this.addRoom.bind(this);\n    this.switchRoomHandle = this.switchRoom.bind(this);\n  }\n\n  componentDidMount() {\n    //setting up socket\n    this.socket = openSocket.connect(this.serverUrl); //when running locally connect to localhost:3030\n    this.socket.on(\"new_message\", data => {\n      this.updateMessages(data);\n    });\n    this.socket.on(\"initialize\", data => {\n      // initializing the app state\n      this.setState({\n        roomList: data.rooms,\n        roomName: data.currentRoom,\n        messages: data.messages\n      });\n    });\n    this.socket.on(\"createRoom\", data => {\n      this.updateRooms(data.rooms);\n    });\n\n    this.socket.on(\"switchRoom\", data => {\n      this.setState({ roomName: data.roomName, messages: data.messages });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.username && this.state.username !== prevState.username) {\n      this.socket.emit(\"username\", { username: this.state.username });\n    }\n  }\n\n  updateMessages = data => {\n    //called when new message received\n    let msgData = [];\n    msgData = this.state.messages;\n    msgData.push(data);\n    this.setState({ messages: msgData });\n  };\n\n  switchRoom(newRoom) {\n    this.setState({ roomName: newRoom, messages: [] });\n    this.socket.emit(\"switchRoom\", { roomName: newRoom });\n  }\n\n  updateRooms(rooms) {\n    this.setState({ roomList: rooms });\n  }\n\n  sendMessage(msg) {\n    //handle to send message\n    //message sent to server and then handled by updateMessages()\n    this.socket.emit(\"new_message\", { message: msg });\n  }\n\n  addRoom(newRoom) {\n    //adds room through new room form\n    const rooms = [...this.state.roomList];\n    rooms.push(newRoom);\n    this.setState({\n      roomList: rooms\n    });\n    this.socket.emit(\"createRoom\", { roomName: newRoom });\n  }\n\n  userLoginHandle = ({ username, password }) => {\n    //used to login the user\n    this.setState({ loading: true, error: \"\" });\n    axios.post(this.serverUrl+\"login\", { password, username })\n      .then(response => {\n        if (response.status === 200) {\n          // auth success\n          this.setState({\n            error: \"\",\n            username: response.data.username\n          });\n        } else if(response.status === 201) {\n          // auth fail=> incorrect password\n          this.setState({ error: \"Oops, not what we expected\" });\n        }else if(response.status === 202){\n          this.setState({ error: \"User not found\" });\n        }else{\n          this.setState({error:\"Something went wrong\"})\n        }\n      })\n      .catch(error => {\n        this.setState({ username: null,\n          error: \"something went wrong\"\n        })\n      }).finally(()=>this.setState({loading: false})\n          // final block stops the spinner on promise rejection or fulfillment\n      )\n  }\n\n  userSignupHandle=({username,password})=>{\n    /***creates new user in db */\n    this.setState({loading:true})\n    axios.post(this.serverUrl + \"signup\",{username,password})\n      .then(response=>{\n        if (response.status === 200) {\n          // auth success\n          this.setState({\n            error: \"\",\n            username: response.data.username\n          });\n        } else if(response.status === 201) {\n          // signup fail=> email exists\n          this.setState({ error: \"User already exists\" });\n        }else{\n          this.setState({error:\"Something went wrong\"})\n        }\n      }).catch(error=>{\n        this.setState({ username: null,\n          error: \"something went wrong\"\n        })\n      }).finally(()=>{\n        this.setState({loading: false})\n      })\n    \n  }\n\n  logout = () => {\n    this.setState({\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error: \"\"\n    });\n  };\n\n  showSideBar = () => {\n    this.setState({\n      showSideBar: true\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideBar: !prevState.showSideBar };\n    });\n  };\n\n  clearErrorHandler = () => {\n    this.setState({ error: \"\", loading: false });\n  };\n\n  render() {\n    if (!this.state.username) {\n      return (\n        <Login loading={this.state.loading} signup={this.userSignupHandle}\n           error={this.state.error} login={this.userLoginHandle} \n           clearErrorHandler={this.clearErrorHandler}\n        />\n      );\n    }\n    return (\n      <div className=\"app\">\n        <Toolbar\n          drawerToggleClicked={this.sideDrawerToggleHandler}\n          logout={this.logout}\n        />\n        <SideDrawer\n          visible={this.state.showSideBar}\n          toggleSideDrawer={this.sideDrawerToggleHandler}\n          logout={this.logout}\n        />\n        <div className=\"main-area\">\n          <section className=\"side-section\">\n            <RoomList\n              switchRoom={this.switchRoomHandle}\n              selectedRoom={this.state.roomName}\n              roomList={this.state.roomList}\n            />\n            <NewRoomForm addRoom={this.addRoomHandle} />\n          </section>\n          <main className=\"main-section\">\n            <MessageList\n              messageData={this.state.messages}\n              currentUser={this.state.username}\n            />\n            <SendMessageForm sendMessage={this.sendMessageHandle} />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2aj-k\",\"Logo\":\"Toolbar_Logo__s8zh_\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1uL-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__Sincj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Y0gB\",\"active\":\"NavigationItem_active__OXcS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"ToggleButton_DrawerToggle__2KfFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__14PyZ\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.be0d9fd5.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__o0gcg\",\"Open\":\"SideDrawer_Open__20umz\",\"Close\":\"SideDrawer_Close__2Aas8\",\"Logo\":\"SideDrawer_Logo__1nkQA\"};"],"sourceRoot":""}