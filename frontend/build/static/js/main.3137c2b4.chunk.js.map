{"version":3,"sources":["components/button.js","components/Message.js","components/MessageList.js","components/NewRoomForm.js","components/RoomList.js","components/SendMessageForm.js","components/login.js","components/spinner.js","navigation/navigationItems/navigationItem/index.js","navigation/navigationItems/index.js","navigation/SideDrawer/toggleButton/index.js","navigation/toolbar/index.js","Backdrop/index.js","navigation/SideDrawer/index.js","App.js","serviceWorker.js","index.js","navigation/toolbar/Toolbar.module.css","navigation/navigationItems/NavigationItems.module.css","navigation/navigationItems/navigationItem/NavigationItem.module.css","navigation/SideDrawer/toggleButton/ToggleButton.module.css","Backdrop/Backdrop.module.css","assets/imgs/spinner.gif","navigation/SideDrawer/SideDrawer.module.css"],"names":["Button","props","react_default","a","createElement","type","className","disabled","children","Message","currentUser","username","style","marginLeft","background","borderRight","text","MessageList","messageData","map","message","index","Message_Message","key","chat","name","NewRoomForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","roomName","submitHandle","event","preventDefault","addRoom","setState","changeHandle","input","target","value","bind","assertThisInitialized","onSubmit","onChange","placeholder","required","id","Component","RoomList","switchRoom","active","selectedRoom","color","fontWeight","href","concat","onClick","_this2","roomList","renderElement","SendMessageForm","handleChange","handleSubmit","sendMessage","Login","toggleLogin","registrationLinkActive","password","error","password_confirmation_error","confirm_password","buttonDisabled","prevProps","prevState","clearErrorHandler","_this$state","length","defineProperty","_this$state2","signup","login","button","button_Button","Fragment","password_confirm","onChangeHandle","loading","spinner_Spinner","method","spinnerImage","require","Spinner","display","width","justifyContent","src","alt","navigationItem","classes","NavigationItem","navigationItems","authenticatedRoutes","navigationItems_navigationItem","link","logout","NavigationItems","toggleButton","click","DrawerToggle","toolbar","Toolbar","SideDrawer_toggleButton","drawerToggleClicked","Logo","DesktopOnly","navigation_navigationItems","isAuthenticated","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","visible","Open","toggleSideDrawer","join","App","updateMessages","data","msgData","messages","push","userLoginHandle","_ref","axios","post","serverUrl","then","response","status","catch","finally","userSignupHandle","_ref2","showSideBar","sideDrawerToggleHandler","sendMessageHandle","addRoomHandle","switchRoomHandle","socket","openSocket","connect","on","rooms","currentRoom","updateRooms","emit","newRoom","msg","toConsumableArray","navigation_toolbar","RoomList_RoomList","NewRoomForm_NewRoomForm","MessageList_MessageList","SendMessageForm_SendMessageForm","login_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3137c2b4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Button =(props)=>(\n  <button type=\"submit\" className=\"btn btn-primary btn-block btn-large\" disabled={props.disabled}>\n    {props.children}\n  </button>\n)\n\nexport {Button}","import React from \"react\";\n\nconst Message = props => {\n  const currentUser = props.currentUser === props.username ? \"Me\" : null;\n  return (\n    <div className=\"message\" style={currentUser?{marginLeft:\"70px\"}:{}}>\n      <div className=\"message-username\"\n        style={currentUser ? { background:\"#ccc\", borderRight:\"2px solid #FFC42D\"}:{}}\n        >\n        {currentUser || props.username}</div>\n      <div\n        className=\"message-text\">\n        {props.text}\n      </div>\n    </div>\n  );\n};\n\nexport { Message };\n","import React from \"react\";\nimport { Message } from \"../components\";\n\nconst MessageList =(props)=> {\n    return (\n      <div className=\"message-list\">\n        {props.messageData.map((message, index) => {\n          return (\n            <Message\n              key={index}\n              text={message.chat}\n              username={message.name}\n              currentUser={props.currentUser}\n            />\n          );\n        })}\n      </div>\n    )\n}\n\nexport { MessageList };\n","import React, { Component } from 'react';\n\nclass NewRoomForm extends Component {\n   constructor(){\n     super()\n     this.submitHandle = this.submitHandle.bind(this);\n     this.changeHandle = this.changeHandle.bind(this)\n   } \n   state = {\n     roomName:\"\"\n   }\n\n    submitHandle=(event)=>{\n      //handles the form submit action\n      event.preventDefault()\n      this.props.addRoom(this.state.roomName)\n      this.setState({roomName:''})\n    }\n\n    changeHandle=(input)=>{\n      //updates the state when text enter in form\n      this.setState({\n        roomName: input.target.value\n      })\n      // console.log(this.state.roomName)\n    }\n\n    render() { \n        return (\n          <div className=\"new-room-form\">\n            <form onSubmit={this.submitHandle}>\n              <input\n                  onChange={this.changeHandle}\n                  value={this.state.roomName}\n                  type=\"text\" \n                  placeholder=\"Create room\" \n                  required />\n              <button id=\"create-room-btn\" type=\"submit\">+</button>\n            </form>\n          </div>\n          );\n    }\n}\n \nexport {NewRoomForm};","import React, { Component } from \"react\";\n\nclass RoomList extends Component {\n  switchRoom(roomName) {\n  this.props.switchRoom(roomName);\n  }\n\n  componentDidMount(){\n\n  }\n\n  renderElement(roomName, index){\n    const active = roomName === this.props.selectedRoom ? {color:\"#FFC42D\", fontWeight: 'bold',} : {}\n  return(\n    <li key={index} className={\"room\"}>\n        <a\n          style={active}\n          href={`#${roomName}`}\n          onClick={() => this.switchRoom(roomName)}\n        >\n          {\" \"}\n           {` ${roomName}`}\n        </a>\n    </li>\n  )\n  }\n\n  render() {\n  return (\n    <div className=\"rooms-list\">\n    <h3>Available Rooms</h3>\n    <ul>\n      {this.props.roomList.map((roomName, index) => {\n      //selected room\n      return (\n        this.renderElement(roomName,index)\n      );\n      })}\n    </ul>\n    </div>\n  );\n  }\n}\n\nexport { RoomList };\n","import React, { Component } from 'react';\n\nclass SendMessageForm extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            message: \"\"\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange=(input)=>{\n      //handles the state for message input field\n      this.setState({message:input.target.value})\n\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        this.props.sendMessage(this.state.message)\n        this.setState({message:''})\n    }\n\n    render() {\n        return (\n            <form className=\"send-message-form\"\n                  onSubmit={this.handleSubmit}\n            >\n                <input\n                    onChange={this.handleChange}\n                    value={this.state.message}\n                    placeholder=\"Start typing... Enter to send\"\n                    type=\"text\" />\n            </form>\n        )\n    }\n}\n \nexport {SendMessageForm};","import React, { Component } from \"react\";\nimport \"./login.css\";\nimport { Spinner,Button } from \"../components\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",   //email\n      password: \"\",\n      error:\"\",\n      password_confirmation_error:\"\",   //used for password match error\n      confirm_password:\"\",\n      registrationLinkActive: false,\n      buttonDisabled: true\n    };\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(this.props.error && this.props.error !== prevProps.error){\n      /** checking the an error exists and  clearing the password field*/ \n      this.setState({ password:\"\" })\n    }\n    if(this.state.registrationLinkActive !== prevState.registrationLinkActive){\n      /** handling toggle between pages*/ \n      this.setState({ password:\"\", confirm_password:\"\",password_confirmation_error:\"\" })\n      this.props.clearErrorHandler()\n    }\n    const {password, confirm_password, username} = this.state\n    if(this.state.registrationLinkActive){\n      // handling password confirmation for signup\n      if(username !== prevState.username || \n        confirm_password !== prevState.confirm_password ||\n         password !== prevState.password ){\n        /** checking state has changed*/\n        if(username.length >5 && password === confirm_password && password.length >4){\n          // values valid\n          this.setState({buttonDisabled: false, password_confirmation_error:\"\"})\n        }else{\n          if(password.length<4 && password !==\"\"){\n            this.setState({password_confirmation_error:\"Password too short\"})\n          }else{\n            this.setState({password_confirmation_error:\"\"})\n          }\n          if(password !== confirm_password && password !== \"\" && confirm_password !== \"\"){\n            this.setState({password_confirmation_error:\"Passwords dont match\"})\n            }\n          this.setState({buttonDisabled: true})\n        }\n      }\n    }else{\n      /** first confirming if state has changed*/ \n      if(password !== prevState.password || username !== prevState.username){\n        if(password.length > 5 && username !== \"\"){\n          this.setState({buttonDisabled:false})\n        }else{\n            // if fields not valid values button stays in disabled state\n            this.setState({buttonDisabled:true})\n          }\n      }\n\n    }\n  }\n\n  onChangeHandle(event){\n    this.props.clearErrorHandler()\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  submitHandle(event) {\n    event.preventDefault();\n    const { username, password } = this.state\n    if(this.state.registrationLinkActive){\n      this.props.signup({username , password})\n    }else{\n      this.props.login({username , password})\n    }\n  }\n\n  toggleLogin=()=>{\n    this.setState({\n      registrationLinkActive: !this.state.registrationLinkActive\n    })\n  }\n\n  render() {\n    let button = <Button disabled={this.state.buttonDisabled}>\n                    Let me in &nbsp;&nbsp;\n                    <i className=\"fa fa-key fa-1.8x\" color=\"black\"></i>\n                  </Button>\n\n    if(this.state.registrationLinkActive){\n      button = (\n        <React.Fragment>\n          <input className=\"input\"\n            type=\"password\" value={this.state.password_confirm}\n            onChange={this.onChangeHandle.bind(this)} name=\"confirm_password\"\n            placeholder=\"Confirm Password\" required\n            />\n          <Button disabled={this.state.buttonDisabled}>\n            Create Account &nbsp;&nbsp;\n            <i className=\"fa fa-user fa-1.8x\" color=\"black\"></i>\n          </Button>\n        </React.Fragment>\n      )\n    }\n    if(this.props.loading){\n      button = <Spinner />\n    }\n    return (\n      <div className=\"login\">\n        <h1>Chat•R</h1>\n        <form method=\"get\" onSubmit={this.submitHandle.bind(this)}>\n          <input\n            className=\"input\"\n            type=\"email\" value={this.state.username}\n            onChange={this.onChangeHandle.bind(this)}  name=\"username\"\n            placeholder=\"Email\"  required\n          />\n          <input\n            className=\"input\" type=\"password\"\n            value={this.state.password} onChange={this.onChangeHandle.bind(this)}\n            name=\"password\" placeholder=\"Password\"\n            required\n          />\n          {button}\n          <span className=\"error\">{this.state.password_confirmation_error}</span>\n          <span className=\"error\">{this.props.error}</span>\n        </form>\n        <small onClick={this.toggleLogin} >{this.state.registrationLinkActive ? \"Returning User\": \"Create New Account ?\"}</small>\n      </div>\n    );\n  }\n}\n\n\nexport { Login };\n","import React from 'react';\nconst spinnerImage = require(\"../assets/imgs/spinner.gif\")\n\nconst Spinner=()=>(\n   <span style={{display: \"flex\", width:\"100%\", justifyContent:\"center\"}}><img src={spinnerImage} className=\"spinner\" alt=\"spinner\"/></span>\n)\n\nexport { Spinner }","import React from 'react';\n// import {NavLink} from \"react-router-dom\"\n\nimport classes from \"./NavigationItem.module.css\"\n\nconst navigationItem = (props)=>{\n  return (\n    <li className={classes.NavigationItem}>\n      {/* <NavLink activeClassName={classes.active} exact to={props.link} >  */}\n        {props.children}\n      {/* </NavLink> */}\n    </li>)\n}\n\nexport default navigationItem","import React from 'react';\nimport classes from \"./NavigationItems.module.css\"\nimport NavigationItem  from \"./navigationItem\"\n\nconst navigationItems = props => {\n  const authenticatedRoutes = (          \n    <React.Fragment>\n      {/* <NavigationItem link=\"/\">Orders</NavigationItem> */}\n      <NavigationItem link=\"/\"><button onClick={props.logout}>Logout</button></NavigationItem>\n    </React.Fragment>\n  )\n  return (\n    <ul className={classes.NavigationItems}>\n      {/* <NavigationItem link=\"/\"><a href=\"/\">Home</a></NavigationItem> */}\n      {\n          // props.isAuthenticated? <NavigationItem link=\"/auth\">Login</NavigationItem> : authenticatedRoutes\n          authenticatedRoutes\n      }\n    </ul>\n  )\n}\n\nexport default navigationItems","import React from 'react';\nimport classes from \"./ToggleButton.module.css\"\n\nconst toggleButton = (props) => {\n    return (\n      <div onClick={props.click} className={classes.DrawerToggle}>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    );\n}\n \nexport default toggleButton;","import React from 'react';\nimport classes from \"./Toolbar.module.css\"\nimport NavigationItems  from \"../navigationItems\"\nimport ToggleButton  from \"../SideDrawer/toggleButton\"\n\n// import Logo from \"../../components/Logo\"\nconst toolbar =props =>{\n  \n  return(\n    <header className={classes.Toolbar}>\n      <ToggleButton click={props.drawerToggleClicked}/>\n      <div className={classes.Logo}>\n        {/* <Logo /> */}\n      </div>\n      <nav className={classes.DesktopOnly}>\n        <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n      </nav>\n    </header>\n  )\n}\n\nexport default toolbar","import React from 'react';\nimport classes from \"./Backdrop.module.css\"\n\nconst backdrop= props =>{\n    return props.show ? <div className={classes.Backdrop} onClick={props.click}></div>: null\n}\n\nexport default backdrop","import React from 'react';\n// import Logo from \"../../components/Logo\"\nimport NavigationItems from \"../navigationItems\"\nimport classes from \"./SideDrawer.module.css\"\nimport Backdrop from \"../../Backdrop\"\n\nconst sideDrawer = (props) => {\n  let attachedClasses = [classes.SideDrawer, classes.Close]\n  if(props.visible){\n    attachedClasses =[classes.SideDrawer,classes.Open]\n  }\n  return (\n    <React.Fragment>\n      <Backdrop show={props.visible} click={props.toggleSideDrawer}/>\n      <div className={attachedClasses.join(\" \") }  onClick={props.toggleSideDrawer}>\n        <div className={classes.Logo}>\n          {/* <Logo /> */}\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuthenticated} logout={props.logout}/>\n        </nav>\n      </div>\n    </React.Fragment>\n\n   );\n}\n \nexport default sideDrawer;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  RoomList,\n  MessageList,\n  NewRoomForm,\n  SendMessageForm,\n  Login\n} from \"./components\";\n\nimport Toolbar from \"./navigation/toolbar\";\nimport SideDrawer from \"./navigation/SideDrawer\";\n\nimport openSocket from \"socket.io-client\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error: \"\",\n      loading: false,\n      showSideBar: false\n    };\n    this.serverUrl = process.env.NODE_ENV !== \"production\" ? \"http://localhost:3030\" : \"/\"; //used to set port either to 3030 or /\n    this.sendMessageHandle = this.sendMessage.bind(this);\n    this.addRoomHandle = this.addRoom.bind(this);\n    this.switchRoomHandle = this.switchRoom.bind(this);\n  }\n\n  componentDidMount() {\n    //setting up socket\n    this.socket = openSocket.connect(this.serverUrl); //when running locally connect to localhost:3030\n    this.socket.on(\"new_message\", data => {\n      this.updateMessages(data);\n    });\n    this.socket.on(\"initialize\", data => {\n      // initializing the app state\n      this.setState({\n        roomList: data.rooms,\n        roomName: data.currentRoom,\n        messages: data.messages\n      });\n    });\n    this.socket.on(\"createRoom\", data => {\n      this.updateRooms(data.rooms);\n    });\n\n    this.socket.on(\"switchRoom\", data => {\n      this.setState({ roomName: data.roomName, messages: data.messages });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.username && this.state.username !== prevState.username) {\n      this.socket.emit(\"username\", { username: this.state.username });\n    }\n  }\n\n  updateMessages = data => {\n    //called when new message received\n    let msgData = [];\n    msgData = this.state.messages;\n    msgData.push(data);\n    this.setState({ messages: msgData });\n  };\n\n  switchRoom(newRoom) {\n    this.setState({ roomName: newRoom, messages: [] });\n    this.socket.emit(\"switchRoom\", { roomName: newRoom });\n  }\n\n  updateRooms(rooms) {\n    this.setState({ roomList: rooms });\n  }\n\n  sendMessage(msg) {\n    //handle to send message\n    //message sent to server and then handled by updateMessages()\n    this.socket.emit(\"new_message\", { message: msg });\n  }\n\n  addRoom(newRoom) {\n    //adds room through new room form\n    const rooms = [...this.state.roomList];\n    rooms.push(newRoom);\n    this.setState({\n      roomList: rooms\n    });\n    this.socket.emit(\"createRoom\", { roomName: newRoom });\n  }\n\n  userLoginHandle = ({ username, password }) => {\n    //used to login the user\n    this.setState({ loading: true, error: \"\" });\n    axios.post(`${this.serverUrl}/login`, { password, username })\n      .then(response => {\n        if (response.status === 200) {\n          // auth success\n          this.setState({\n            error: \"\",\n            username: response.data.username\n          });\n        } else if(response.status === 201) {\n          // auth fail=> incorrect password\n          this.setState({ error: \"Oops, not what we expected\" });\n        }else if(response.status === 202){\n          this.setState({ error: \"User not found\" });\n        }else{\n          this.setState({error:\"Something went wrong\"})\n        }\n      })\n      .catch(error => {\n        this.setState({ username: null,\n          error: \"something went wrong\"\n        })\n      }).finally(()=>this.setState({loading: false})\n          // final block stops the spinner on promise rejection or fulfillment\n      )\n  }\n\n  userSignupHandle=({username,password})=>{\n    /***creates new user in db */\n    this.setState({loading:true})\n    axios.post(`${this.serverUrl}/signup`,{username,password})\n      .then(response=>{\n        if (response.status === 200) {\n          // auth success\n          this.setState({\n            error: \"\",\n            username: response.data.username\n          });\n        } else if(response.status === 201) {\n          // signup fail=> email exists\n          this.setState({ error: \"User already exists\" });\n        }else{\n          this.setState({error:\"Something went wrong\"})\n        }\n      }).catch(error=>{\n        this.setState({ username: null,\n          error: \"something went wrong\"\n        })\n      }).finally(()=>{\n        this.setState({loading: false})\n      })\n    \n  }\n\n  logout = () => {\n    this.setState({\n      messages: [],\n      roomList: [],\n      roomName: null,\n      username: null,\n      error: \"\"\n    });\n  };\n\n  showSideBar = () => {\n    this.setState({\n      showSideBar: true\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return { showSideBar: !prevState.showSideBar };\n    });\n  };\n\n  clearErrorHandler = () => {\n    this.setState({ error: \"\", loading: false });\n  };\n\n  render() {\n    if (!this.state.username) {\n      return (\n        <Login loading={this.state.loading} signup={this.userSignupHandle}\n           error={this.state.error} login={this.userLoginHandle} \n           clearErrorHandler={this.clearErrorHandler}\n        />\n      );\n    }\n    return (\n      <div className=\"app\">\n        <Toolbar\n          drawerToggleClicked={this.sideDrawerToggleHandler}\n          logout={this.logout}\n        />\n        <SideDrawer\n          visible={this.state.showSideBar}\n          toggleSideDrawer={this.sideDrawerToggleHandler}\n          logout={this.logout}\n        />\n        <div className=\"main-area\">\n          <section className=\"side-section\">\n            <RoomList\n              switchRoom={this.switchRoomHandle}\n              selectedRoom={this.state.roomName}\n              roomList={this.state.roomList}\n            />\n            <NewRoomForm addRoom={this.addRoomHandle} />\n          </section>\n          <main className=\"main-section\">\n            <MessageList\n              messageData={this.state.messages}\n              currentUser={this.state.username}\n            />\n            <SendMessageForm sendMessage={this.sendMessageHandle} />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2aj-k\",\"Logo\":\"Toolbar_Logo__s8zh_\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1uL-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__Sincj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Y0gB\",\"active\":\"NavigationItem_active__OXcS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"ToggleButton_DrawerToggle__2KfFP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__14PyZ\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.be0d9fd5.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__o0gcg\",\"Open\":\"SideDrawer_Open__20umz\",\"Close\":\"SideDrawer_Close__2Aas8\",\"Logo\":\"SideDrawer_Logo__1nkQA\"};"],"sourceRoot":""}